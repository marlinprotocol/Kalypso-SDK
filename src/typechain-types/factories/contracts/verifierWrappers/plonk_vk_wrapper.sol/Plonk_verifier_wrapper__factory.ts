/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, BytesLike, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Plonk_verifier_wrapper,
  Plonk_verifier_wrapperInterface,
} from "../../../../contracts/verifierWrappers/plonk_vk_wrapper.sol/Plonk_verifier_wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract i_plonk_vk",
        name: "_iverifier",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sampleInput",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_sampleProof",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "checkSampleInputsAndProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "marketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeTakenForProofGeneration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proverData",
            type: "bytes",
          },
        ],
        internalType: "struct ProofMarketplace.Ask",
        name: "ask",
        type: "tuple",
      },
      {
        internalType: "enum ProofMarketplace.SecretType",
        name: "secretType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "secret_inputs",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "acl",
        type: "bytes",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "inputs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "encodeInputAndProofForVerification",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "inputs",
        type: "bytes32[]",
      },
    ],
    name: "encodeInputs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "encodeProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "iverifier",
    outputs: [
      {
        internalType: "contract i_plonk_vk",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofMarketplace",
    outputs: [
      {
        internalType: "contract ProofMarketplace",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sampleInput",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sampleProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ProofMarketplace",
        name: "_proofMarketplace",
        type: "address",
      },
    ],
    name: "setProofMarketplaceContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedProof",
        type: "bytes",
      },
    ],
    name: "verifyAgainstSampleInputs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputs",
        type: "bytes",
      },
    ],
    name: "verifyInputs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200126f3803806200126f833981016040819052620000349162000130565b6001600160a01b03831660805260016200004f83826200024b565b5060026200005e82826200024b565b5050505062000317565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009057600080fd5b81516001600160401b0380821115620000ad57620000ad62000068565b604051601f8301601f19908116603f01168101908282118183101715620000d857620000d862000068565b8160405283815260209250866020858801011115620000f657600080fd5b600091505b838210156200011a5785820183015181830184015290820190620000fb565b6000602085830101528094505050505092915050565b6000806000606084860312156200014657600080fd5b83516001600160a01b03811681146200015e57600080fd5b60208501519093506001600160401b03808211156200017c57600080fd5b6200018a878388016200007e565b93506040860151915080821115620001a157600080fd5b50620001b0868287016200007e565b9150509250925092565b600181811c90821680620001cf57607f821691505b602082108103620001f057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000246576000816000526020600020601f850160051c81016020861015620002215750805b601f850160051c820191505b8181101562000242578281556001016200022d565b5050505b505050565b81516001600160401b0381111562000267576200026762000068565b6200027f81620002788454620001ba565b84620001f6565b602080601f831160018114620002b757600084156200029e5750858301515b600019600386901b1c1916600185901b17855562000242565b600085815260208120601f198616915b82811015620002e857888601518255948401946001909101908401620002c7565b5085821015620003075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610f356200033a600039600081816101d801526104a40152610f356000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637d8ad42b1161008c578063a6dfbc7f11610066578063a6dfbc7f146101a5578063a76c0551146101b8578063d2235eac146101c0578063e7f5b81d146101d357600080fd5b80637d8ad42b1461015f57806381c45c70146101675780638e760afe1461019257600080fd5b806302f77d19146100d4578063056de704146100fc57806310a54279146101115780633fa0cfbf146101195780634cff91251461013957806370f9dfca1461014c575b600080fd5b6100e76100e2366004610777565b6101fa565b60405190151581526020015b60405180910390f35b61010f61010a3660046107cb565b610232565b005b6100e76102a0565b61012c610127366004610875565b61033a565b6040516100f391906108f9565b61012c610147366004610777565b610363565b61012c61015a36600461090c565b610376565b61012c6103b2565b60005461017a906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b6100e76101a0366004610777565b610440565b6100e76101b33660046109b7565b610526565b61012c61053e565b61010f6101ce3660046109f8565b61054b565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b600080600183604051602001610211929190610ae6565b604051602081830303815290604052905061022b81610440565b9392505050565b6000546001600160a01b03161561027e5760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e4814d95d60aa1b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610335600280546102b290610aac565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90610aac565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b50505050506101fa565b905090565b60608160405160200161034d9190610be5565b6040516020818303038152906040529050919050565b60608160405160200161034d91906108f9565b60606103818361033a565b61038a83610363565b60405160200161039b929190610bf8565b604051602081830303815290604052905092915050565b600180546103bf90610aac565b80601f01602080910402602001604051908101604052809291908181526020018280546103eb90610aac565b80156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b505050505081565b60006060806000808580602001905181019061045c9190610c62565b91509150818060200190518101906104749190610cbb565b93508080602001905181019061048a9190610d4b565b604051633a94343960e21b81529093506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e4906104db9086908890600401610d7f565b602060405180830381865afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c9190610da4565b9695505050505050565b600061053482840184610875565b5060019392505050565b600280546103bf90610aac565b60006040518060e0016040528088600001358152602001886020013581526020018860400135815260200188606001358152602001886080013581526020018860a001602081019061059d91906107cb565b6001600160a01b031681526020016105c36101276105be60c08c018c610dc6565b61063b565b9052600054604051633829c7e560e11b81529192506001600160a01b0316906370538fca906106009084908a908a908a908a908a90600401610e57565b600060405180830381600087803b15801561061a57600080fd5b505af115801561062e573d6000803e3d6000fd5b5050505050505050505050565b60606106478383610526565b6106a85760405162461bcd60e51b815260206004820152602c60248201527f506c6f6e6b20566572696669657220577261707065723a20496e76616c69642060448201526b1a5b9c1d5d08199bdc9b585d60a21b6064820152608401610275565b61022b82840184610875565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156106f2576106f26106b4565b604052919050565b60006001600160401b03821115610713576107136106b4565b50601f01601f191660200190565b600082601f83011261073257600080fd5b8135610745610740826106fa565b6106ca565b81815284602083860101111561075a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561078957600080fd5b81356001600160401b0381111561079f57600080fd5b6107ab84828501610721565b949350505050565b6001600160a01b03811681146107c857600080fd5b50565b6000602082840312156107dd57600080fd5b813561022b816107b3565b60006001600160401b03821115610801576108016106b4565b5060051b60200190565b600082601f83011261081c57600080fd5b8135602061082c610740836107e8565b8083825260208201915060208460051b87010193508684111561084e57600080fd5b602086015b8481101561086a5780358352918301918301610853565b509695505050505050565b60006020828403121561088757600080fd5b81356001600160401b0381111561089d57600080fd5b6107ab8482850161080b565b60005b838110156108c45781810151838201526020016108ac565b50506000910152565b600081518084526108e58160208601602086016108a9565b601f01601f19169290920160200192915050565b60208152600061022b60208301846108cd565b6000806040838503121561091f57600080fd5b82356001600160401b038082111561093657600080fd5b6109428683870161080b565b9350602085013591508082111561095857600080fd5b5061096585828601610721565b9150509250929050565b60008083601f84011261098157600080fd5b5081356001600160401b0381111561099857600080fd5b6020830191508360208285010111156109b057600080fd5b9250929050565b600080602083850312156109ca57600080fd5b82356001600160401b038111156109e057600080fd5b6109ec8582860161096f565b90969095509350505050565b60008060008060008060808789031215610a1157600080fd5b86356001600160401b0380821115610a2857600080fd5b9088019060e0828b031215610a3c57600080fd5b90965060208801359060038210610a5257600080fd5b90955060408801359080821115610a6857600080fd5b610a748a838b0161096f565b90965094506060890135915080821115610a8d57600080fd5b50610a9a89828a0161096f565b979a9699509497509295939492505050565b600181811c90821680610ac057607f821691505b602082108103610ae057634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260008084548160018260011c91506001831680610b0857607f831692505b60208084108203610b2757634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015610b465760018114610b5c57610b87565b60ff198716825285151560051b82019750610b87565b60008c81526020902060005b87811015610b8157815484820152908601908401610b68565b83019850505b505050505050508281036020840152610ba081856108cd565b95945050505050565b60008151808452602080850194506020840160005b83811015610bda57815187529582019590820190600101610bbe565b509495945050505050565b60208152600061022b6020830184610ba9565b604081526000610c0b60408301856108cd565b8281036020840152610ba081856108cd565b600082601f830112610c2e57600080fd5b8151610c3c610740826106fa565b818152846020838601011115610c5157600080fd5b6107ab8260208301602087016108a9565b60008060408385031215610c7557600080fd5b82516001600160401b0380821115610c8c57600080fd5b610c9886838701610c1d565b93506020850151915080821115610cae57600080fd5b5061096585828601610c1d565b60006020808385031215610cce57600080fd5b82516001600160401b03811115610ce457600080fd5b8301601f81018513610cf557600080fd5b8051610d03610740826107e8565b81815260059190911b82018301908381019087831115610d2257600080fd5b928401925b82841015610d4057835182529284019290840190610d27565b979650505050505050565b600060208284031215610d5d57600080fd5b81516001600160401b03811115610d7357600080fd5b6107ab84828501610c1d565b604081526000610d9260408301856108cd565b8281036020840152610ba08185610ba9565b600060208284031215610db657600080fd5b8151801515811461022b57600080fd5b6000808335601e19843603018112610ddd57600080fd5b8301803591506001600160401b03821115610df757600080fd5b6020019150368190038213156109b057600080fd5b60038110610e2a57634e487b7160e01b600052602160045260246000fd5b9052565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6080815286516080820152602087015160a0820152604087015160c0820152606087015160e0820152608087015161010082015260018060a01b0360a088015116610120820152600060c088015160e0610140840152610ebb6101608401826108cd565b9050610eca6020840189610e0c565b8281036040840152610edd818789610e2e565b90508281036060840152610ef2818587610e2e565b999850505050505050505056fea26469706673582212209efd144fe2ee69fe253a3190a4f12378dd262b209bb88c770cc99f59599b69fb64736f6c63430008180033";

type Plonk_verifier_wrapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: Plonk_verifier_wrapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Plonk_verifier_wrapper__factory extends ContractFactory {
  constructor(...args: Plonk_verifier_wrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _iverifier: AddressLike,
    _sampleInput: BytesLike,
    _sampleProof: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_iverifier, _sampleInput, _sampleProof, overrides || {});
  }
  override deploy(
    _iverifier: AddressLike,
    _sampleInput: BytesLike,
    _sampleProof: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_iverifier, _sampleInput, _sampleProof, overrides || {}) as Promise<
      Plonk_verifier_wrapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Plonk_verifier_wrapper__factory {
    return super.connect(runner) as Plonk_verifier_wrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Plonk_verifier_wrapperInterface {
    return new Interface(_abi) as Plonk_verifier_wrapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Plonk_verifier_wrapper {
    return new Contract(address, _abi, runner) as unknown as Plonk_verifier_wrapper;
  }
}
