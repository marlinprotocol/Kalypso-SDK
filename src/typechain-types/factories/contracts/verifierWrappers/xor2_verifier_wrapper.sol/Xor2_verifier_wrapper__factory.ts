/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, BytesLike, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Xor2_verifier_wrapper,
  Xor2_verifier_wrapperInterface,
} from "../../../../contracts/verifierWrappers/xor2_verifier_wrapper.sol/Xor2_verifier_wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract i_xor2_verifier",
        name: "_iverifier",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_sampleInput",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_sampleProof",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "checkSampleInputsAndProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "marketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timeTakenForProofGeneration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proverData",
            type: "bytes",
          },
        ],
        internalType: "struct ProofMarketplace.Ask",
        name: "ask",
        type: "tuple",
      },
      {
        internalType: "enum ProofMarketplace.SecretType",
        name: "secretType",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "secret_inputs",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "acl",
        type: "bytes",
      },
    ],
    name: "createRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[1]",
        name: "inputs",
        type: "uint256[1]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "encodeInputAndProofForVerification",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[1]",
        name: "inputs",
        type: "uint256[1]",
      },
    ],
    name: "encodeInputs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "encodeProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "iverifier",
    outputs: [
      {
        internalType: "contract i_xor2_verifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofMarketplace",
    outputs: [
      {
        internalType: "contract ProofMarketplace",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sampleInput",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sampleProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ProofMarketplace",
        name: "_proofMarketplace",
        type: "address",
      },
    ],
    name: "setProofMarketplaceContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedProof",
        type: "bytes",
      },
    ],
    name: "verifyAgainstSampleInputs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputs",
        type: "bytes",
      },
    ],
    name: "verifyInputs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620015c2380380620015c2833981016040819052620000349162000130565b6001600160a01b03831660805260016200004f83826200024b565b5060026200005e82826200024b565b5050505062000317565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200009057600080fd5b81516001600160401b0380821115620000ad57620000ad62000068565b604051601f8301601f19908116603f01168101908282118183101715620000d857620000d862000068565b8160405283815260209250866020858801011115620000f657600080fd5b600091505b838210156200011a5785820183015181830184015290820190620000fb565b6000602085830101528094505050505092915050565b6000806000606084860312156200014657600080fd5b83516001600160a01b03811681146200015e57600080fd5b60208501519093506001600160401b03808211156200017c57600080fd5b6200018a878388016200007e565b93506040860151915080821115620001a157600080fd5b50620001b0868287016200007e565b9150509250925092565b600181811c90821680620001cf57607f821691505b602082108103620001f057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000246576000816000526020600020601f850160051c81016020861015620002215750805b601f850160051c820191505b8181101562000242578281556001016200022d565b5050505b505050565b81516001600160401b0381111562000267576200026762000068565b6200027f81620002788454620001ba565b84620001f6565b602080601f831160018114620002b757600084156200029e5750858301515b600019600386901b1c1916600185901b17855562000242565b600085815260208120601f198616915b82811015620002e857888601518255948401946001909101908401620002c7565b5085821015620003075787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516112886200033a600039600081816101c8015261049201526112886000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80638e760afe1161008c578063a76c055111610066578063a76c0551146101a8578063d2235eac146101b0578063e7f5b81d146101c3578063ec23a9ed146101ea57600080fd5b80638e760afe1461016f5780639bbcad7814610182578063a6dfbc7f1461019557600080fd5b80626b4fb0146100d357806302f77d19146100fc578063056de7041461011f57806310a54279146101345780637d8ad42b1461013c57806381c45c7014610144575b600080fd5b6100e66100e1366004610937565b6101fd565b6040516100f391906109e0565b60405180910390f35b61010f61010a366004610a1b565b61023e565b60405190151581526020016100f3565b61013261012d366004610ab3565b610276565b005b61010f6102e4565b6100e661037e565b600054610157906001600160a01b031681565b6040516001600160a01b0390911681526020016100f3565b61010f61017d366004610a1b565b61040c565b6100e6610190366004610ad0565b61051a565b61010f6101a3366004610b35565b610543565b6100e661055d565b6101326101be366004610b77565b61056a565b6101577f000000000000000000000000000000000000000000000000000000000000000081565b6100e66101f8366004610c2c565b61069c565b60606102088561051a565b61021385858561069c565b604051602001610224929190610c73565b60405160208183030381529060405290505b949350505050565b600080600183604051602001610255929190610cdb565b604051602081830303815290604052905061026f8161040c565b9392505050565b6000546001600160a01b0316156102c25760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e4814d95d60aa1b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000610379600280546102f690610ca1565b80601f016020809104026020016040519081016040528092919081815260200182805461032290610ca1565b801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b505050505061023e565b905090565b6001805461038b90610ca1565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790610ca1565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b505050505081565b600061041661074b565b61041e610769565b61042661074b565b61042e610796565b600080878060200190518101906104459190610dda565b915091508180602001905181019061045d9190610e3e565b9250808060200190518101906104739190610ee4565b6040516343753b4d60e01b815292985090965094506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906343753b4d906104cd908990899089908990600401610fec565b602060405180830381865afa1580156104ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050e9190611023565b98975050505050505050565b60608160405160200161052d9190611045565b6040516020818303038152906040529050919050565b600061055182840184611053565b50600190505b92915050565b6002805461038b90610ca1565b60006040518060e0016040528088600001358152602001886020013581526020018860400135815260200188606001358152602001886080013581526020018860a00160208101906105bc9190610ab3565b6001600160a01b031681526020016105e26101906105dd60c08c018c6110ed565b6106cb565b90526000546040519192506001600160a01b0316906370538fca9083908990610611908a908a90602001611134565b6040516020818303038152906040528787604051602001610633929190611134565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016106619493929190611185565b600060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b5050505050505050505050565b60608383836040516020016106b393929190611229565b60405160208183030381529060405290509392505050565b6106d3610796565b6106dd8383610543565b61073f5760405162461bcd60e51b815260206004820152602d60248201527f436972636f6d20566572696669657220577261707065723a20496e76616c696460448201526c081a5b9c1d5d08199bdc9b585d609a1b60648201526084016102b9565b61026f82840184610ad0565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b61078061074b565b8152602001906001900390816107785790505090565b60405180602001604052806001906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040516020810167ffffffffffffffff811182821017156107ed576107ed6107b4565b60405290565b6040805190810167ffffffffffffffff811182821017156107ed576107ed6107b4565b604051601f8201601f1916810167ffffffffffffffff8111828210171561083f5761083f6107b4565b604052919050565b600082601f83011261085857600080fd5b6108606107ca565b8060208085018681111561087357600080fd5b855b8181101561088c5780358552938201938201610875565b50919695505050505050565b600082601f8301126108a957600080fd5b6108b16107f3565b8060408401858111156108c357600080fd5b845b818110156108dd5780358452602093840193016108c5565b509095945050505050565b600082601f8301126108f957600080fd5b6109016107f3565b80608084018581111561091357600080fd5b845b818110156108dd576109278782610898565b8452602090930192604001610915565b600080600080610120858703121561094e57600080fd5b6109588686610847565b93506109678660208701610898565b925061097686606087016108e8565b91506109858660e08701610898565b905092959194509250565b60005b838110156109ab578181015183820152602001610993565b50506000910152565b600081518084526109cc816020860160208601610990565b601f01601f19169290920160200192915050565b60208152600061026f60208301846109b4565b600067ffffffffffffffff821115610a0d57610a0d6107b4565b50601f01601f191660200190565b600060208284031215610a2d57600080fd5b813567ffffffffffffffff811115610a4457600080fd5b8201601f81018413610a5557600080fd5b8035610a68610a63826109f3565b610816565b818152856020838501011115610a7d57600080fd5b81602084016020830137600091810160200191909152949350505050565b6001600160a01b0381168114610ab057600080fd5b50565b600060208284031215610ac557600080fd5b813561026f81610a9b565b600060208284031215610ae257600080fd5b61026f8383610847565b60008083601f840112610afe57600080fd5b50813567ffffffffffffffff811115610b1657600080fd5b602083019150836020828501011115610b2e57600080fd5b9250929050565b60008060208385031215610b4857600080fd5b823567ffffffffffffffff811115610b5f57600080fd5b610b6b85828601610aec565b90969095509350505050565b60008060008060008060808789031215610b9057600080fd5b863567ffffffffffffffff80821115610ba857600080fd5b9088019060e0828b031215610bbc57600080fd5b90965060208801359060038210610bd257600080fd5b90955060408801359080821115610be857600080fd5b610bf48a838b01610aec565b90965094506060890135915080821115610c0d57600080fd5b50610c1a89828a01610aec565b979a9699509497509295939492505050565b60008060006101008486031215610c4257600080fd5b610c4c8585610898565b9250610c5b85604086016108e8565b9150610c6a8560c08601610898565b90509250925092565b604081526000610c8660408301856109b4565b8281036020840152610c9881856109b4565b95945050505050565b600181811c90821680610cb557607f821691505b602082108103610cd557634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260008084548160018260011c91506001831680610cfd57607f831692505b60208084108203610d1c57634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015610d3b5760018114610d5157610d7c565b60ff198716825285151560051b82019750610d7c565b60008c81526020902060005b87811015610d7657815484820152908601908401610d5d565b83019850505b505050505050508281036020840152610c9881856109b4565b600082601f830112610da657600080fd5b8151610db4610a63826109f3565b818152846020838601011115610dc957600080fd5b610236826020830160208701610990565b60008060408385031215610ded57600080fd5b825167ffffffffffffffff80821115610e0557600080fd5b610e1186838701610d95565b93506020850151915080821115610e2757600080fd5b50610e3485828601610d95565b9150509250929050565b60006020808385031215610e5157600080fd5b83601f840112610e6057600080fd5b610e686107ca565b806020850186811115610e7a57600080fd5b855b81811015610e935780518452928401928401610e7c565b50909695505050505050565b600082601f830112610eb057600080fd5b610eb86107f3565b806040840185811115610eca57600080fd5b845b818110156108dd578051845260209384019301610ecc565b60008060006101008486031215610efa57600080fd5b610f048585610e9f565b9250604085605f860112610f1757600080fd5b610f1f6107f3565b8060c0870188811115610f3157600080fd5b604088015b81811015610f5757610f488a82610e9f565b84526020909301928401610f36565b50819550610f658982610e9f565b9450505050509250925092565b8060005b6002811015610f95578151845260209384019390910190600101610f76565b50505050565b8060005b6002811015610f9557610fb3848351610f72565b6040939093019260209190910190600101610f9f565b8060005b6001811015610f95578151845260209384019390910190600101610fcd565b6101208101610ffb8287610f72565b6110086040830186610f9b565b61101560c0830185610f72565b610c98610100830184610fc9565b60006020828403121561103557600080fd5b8151801515811461026f57600080fd5b602081016105578284610fc9565b6000602080838503121561106657600080fd5b823567ffffffffffffffff8082111561107e57600080fd5b818501915085601f83011261109257600080fd5b8135818111156110a4576110a46107b4565b8060051b91506110b5848301610816565b81815291830184019184810190888411156110cf57600080fd5b938501935b8385101561050e578435825293850193908501906110d4565b6000808335601e1984360301811261110457600080fd5b83018035915067ffffffffffffffff82111561111f57600080fd5b602001915036819003821315610b2e57600080fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6003811061118157634e487b7160e01b600052602160045260246000fd5b9052565b6080815284516080820152602085015160a0820152604085015160c0820152606085015160e0820152608085015161010082015260018060a01b0360a086015116610120820152600060c086015160e06101408401526111e96101608401826109b4565b90506111f86020840187611163565b828103604084015261120a81866109b4565b9050828103606084015261121e81856109b4565b979650505050505050565b61010081016112388286610f72565b6112456040830185610f9b565b61023660c0830184610f7256fea2646970667358221220f7f1bfbd36c5c71f214f4be25f204cb5ed38890af0e0578861d5ccceed80fc3b64736f6c63430008180033";

type Xor2_verifier_wrapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: Xor2_verifier_wrapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Xor2_verifier_wrapper__factory extends ContractFactory {
  constructor(...args: Xor2_verifier_wrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _iverifier: AddressLike,
    _sampleInput: BytesLike,
    _sampleProof: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_iverifier, _sampleInput, _sampleProof, overrides || {});
  }
  override deploy(
    _iverifier: AddressLike,
    _sampleInput: BytesLike,
    _sampleProof: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_iverifier, _sampleInput, _sampleProof, overrides || {}) as Promise<
      Xor2_verifier_wrapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Xor2_verifier_wrapper__factory {
    return super.connect(runner) as Xor2_verifier_wrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Xor2_verifier_wrapperInterface {
    return new Interface(_abi) as Xor2_verifier_wrapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Xor2_verifier_wrapper {
    return new Contract(address, _abi, runner) as unknown as Xor2_verifier_wrapper;
  }
}
