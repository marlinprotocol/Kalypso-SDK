/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Forwarder, ForwarderInterface } from "../../../contracts/battleship/Forwarder";

const _abi = [
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604080518082018252601081526f26b4b734b6b0b62337b93bb0b93232b960811b60208083019190915282518084019093526005835264302e302e3160d81b90830152906200006482600062000112565b610120526200007581600162000112565b61014052815160208084019190912060e052815190820120610100524660a0526200010360e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0526200037d565b600060208351101562000132576200012a836200014b565b905062000145565b816200013f84826200023c565b5060ff90505b92915050565b600080829050601f8151111562000182578260405163305a27a960e01b815260040162000179919062000308565b60405180910390fd5b80516200018f8262000358565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c257607f821691505b602082108103620001e357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023757600081815260208120601f850160051c81016020861015620002125750805b601f850160051c820191505b8181101562000233578281556001016200021e565b5050505b505050565b81516001600160401b0381111562000258576200025862000197565b6200027081620002698454620001ad565b84620001e9565b602080601f831160018114620002a857600084156200028f5750858301515b600019600386901b1c1916600185901b17855562000233565b600085815260208120601f198616915b82811015620002d957888601518255948401946001909101908401620002b8565b5085821015620002f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620003375785810183015185820160400152820162000319565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620001e35760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610ccc620003d860003960006102d8015260006102ae015260006106be01526000610696015260006105f10152600061061b015260006106450152610ccc6000f3fe60806040526004361061003f5760003560e01c80632d0335ab1461004457806347153f821461008d57806384b0196e146100ae578063bf5d3bdb146100d6575b600080fd5b34801561005057600080fd5b5061007a61005f366004610992565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b6100a061009b3660046109c2565b610106565b604051610084929190610ab1565b3480156100ba57600080fd5b506100c36102a0565b6040516100849796959493929190610ad4565b3480156100e257600080fd5b506100f66100f13660046109c2565b610328565b6040519015158152602001610084565b60006060610115858585610328565b6101815760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61019060808601356001610b6a565b600260006101a16020890189610992565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101db9190610992565b6001600160a01b0316606088013560408901356101fb60a08b018b610b8b565b61020860208d018d610992565b60405160200161021a93929190610bd2565b60408051601f198184030181529082905261023491610bf8565b600060405180830381858888f193505050503d8060008114610272576040519150601f19603f3d011682016040523d82523d6000602084013e610277565b606091505b50909250905061028c603f6060890135610c14565b5a1161029457fe5b90969095509350505050565b6000606080828080836102d37f0000000000000000000000000000000000000000000000000000000000000000836104a7565b6102fe7f000000000000000000000000000000000000000000000000000000000000000060016104a7565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60008061043b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061043592507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610398905060208a018a610992565b6103a860408b0160208c01610992565b60408b013560608c013560808d01356103c460a08f018f610b8b565b6040516103d2929190610c36565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e08101919091526101000160405160208183030381529060405280519060200120610554565b90610581565b90506080850135600260006104536020890189610992565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561049e57506104896020860186610992565b6001600160a01b0316816001600160a01b0316145b95945050505050565b606060ff83146104c1576104ba836105a5565b905061054e565b8180546104cd90610c46565b80601f01602080910402602001604051908101604052809291908181526020018280546104f990610c46565b80156105465780601f1061051b57610100808354040283529160200191610546565b820191906000526020600020905b81548152906001019060200180831161052957829003601f168201915b505050505090505b92915050565b600061054e6105616105e4565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006105908585610714565b9150915061059d81610759565b509392505050565b606060006105b2836108a6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561063d57507f000000000000000000000000000000000000000000000000000000000000000046145b1561066757507f000000000000000000000000000000000000000000000000000000000000000090565b61070f604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b600080825160410361074a5760208301516040840151606085015160001a61073e878285856108ce565b94509450505050610752565b506000905060025b9250929050565b600081600481111561076d5761076d610c80565b036107755750565b600181600481111561078957610789610c80565b036107d65760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610178565b60028160048111156107ea576107ea610c80565b036108375760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610178565b600381600481111561084b5761084b610c80565b036108a35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610178565b50565b600060ff8216601f81111561054e57604051632cd44ac360e21b815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156109055750600090506003610989565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610959573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661098257600060019250925050610989565b9150600090505b94509492505050565b6000602082840312156109a457600080fd5b81356001600160a01b03811681146109bb57600080fd5b9392505050565b6000806000604084860312156109d757600080fd5b833567ffffffffffffffff808211156109ef57600080fd5b9085019060c08288031215610a0357600080fd5b90935060208501359080821115610a1957600080fd5b818601915086601f830112610a2d57600080fd5b813581811115610a3c57600080fd5b876020828501011115610a4e57600080fd5b6020830194508093505050509250925092565b60005b83811015610a7c578181015183820152602001610a64565b50506000910152565b60008151808452610a9d816020860160208601610a61565b601f01601f19169290920160200192915050565b8215158152604060208201526000610acc6040830184610a85565b949350505050565b60ff60f81b881681526000602060e081840152610af460e084018a610a85565b8381036040850152610b06818a610a85565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610b5857835183529284019291840191600101610b3c565b50909c9b505050505050505050505050565b8082018082111561054e57634e487b7160e01b600052601160045260246000fd5b6000808335601e19843603018112610ba257600080fd5b83018035915067ffffffffffffffff821115610bbd57600080fd5b60200191503681900382131561075257600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610c0a818460208701610a61565b9190910192915050565b600082610c3157634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b600181811c90821680610c5a57607f821691505b602082108103610c7a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220eeba60f20c37ec9d2e1dc084fd9786a2893bef254fdaf05772e574481589928764736f6c63430008130033";

type ForwarderConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ForwarderConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Forwarder__factory extends ContractFactory {
  constructor(...args: ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Forwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Forwarder__factory {
    return super.connect(runner) as Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForwarderInterface {
    return new Interface(_abi) as ForwarderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Forwarder {
    return new Contract(address, _abi, runner) as unknown as Forwarder;
  }
}
