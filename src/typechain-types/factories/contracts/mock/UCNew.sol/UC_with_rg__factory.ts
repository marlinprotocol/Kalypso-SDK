/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { UC_with_rg, UC_with_rgInterface } from "../../../../contracts/mock/UCNew.sol/UC_with_rg";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "my_operation1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "my_operation2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b507ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff1615906001600160401b031660008115801561005f5750825b90506000826001600160401b0316600114801561007b5750303b155b905081158015610089575080155b156100a75760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b031916600117855583156100d557845460ff60401b1916680100000000000000001785555b831561010957845460ff60401b1916855560405160018152600080516020610c148339815191529060200160405180910390a15b5050505050600061011e6101fe60201b60201c565b805490915060ff6801000000000000000082041615906001600160401b031660008115801561014a5750825b90506000826001600160401b031660011480156101665750303b155b905081158015610174575080155b156101925760405163f92ee8a960e01b815260040160405180910390fd5b84546001600160401b031916600117855583156101c057845460ff60401b1916680100000000000000001785555b83156101f457845460ff60401b1916855560405160018152600080516020610c148339815191529060200160405180910390a15b5050505050610222565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b6080516109c961024b600039600081816103110152818161033a015261047d01526109c96000f3fe60806040526004361061007b5760003560e01c80638129fc1c1161004e5780638129fc1c14610115578063ad3cb1cc1461012a578063bc2e66e614610168578063eefb44611461017457600080fd5b806301ffc9a7146100805780631f457cb5146100c65780634f1ef286146100eb57806352d1902d14610100575b600080fd5b34801561008c57600080fd5b506100b161009b3660046107d7565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b3480156100d257600080fd5b506100dd6101f45481565b6040519081526020016100bd565b6100fe6100f9366004610817565b610189565b005b34801561010c57600080fd5b506100dd61019f565b34801561012157600080fd5b506100fe6101bd565b34801561013657600080fd5b5061015b604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516100bd919061090b565b3480156100fe57600080fd5b34801561018057600080fd5b506100dd6102ce565b610191610306565b61019b82826103ab565b5050565b60006101a9610472565b506000805160206109748339815191525b90565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156102035750825b905060008267ffffffffffffffff1660011480156102205750303b155b90508115801561022e575080155b1561024c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561027657845460ff60401b1916600160401b1785555b61027e6104bb565b83156102c557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020015b60405180910390a15b5050505050565b565b60006102d86105b5565b506101f4546101ba60017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061038d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610381600080516020610974833981519152546001600160a01b031690565b6001600160a01b031614155b156102cc5760405163703e46dd60e11b815260040160405180910390fd5b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610405575060408051601f3d908101601f191682019092526104029181019061093e565b60015b61043257604051634c9c8ce360e01b81526001600160a01b03831660048201526024015b60405180910390fd5b600080516020610974833981519152811461046357604051632a87526960e21b815260048101829052602401610429565b61046d83836105ff565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102cc5760405163703e46dd60e11b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156105015750825b905060008267ffffffffffffffff16600114801561051e5750303b155b90508115801561052c575080155b1561054a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561027e57845460ff60401b1916600160401b17855583156102c557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020016102bc565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f008054600119016105f957604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b61060882610655565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561064d5761046d82826106ba565b61019b610730565b806001600160a01b03163b60000361068b57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610429565b60008051602061097483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516106d79190610957565b600060405180830381855af49150503d8060008114610712576040519150601f19603f3d011682016040523d82523d6000602084013e610717565b606091505b509150915061072785838361074f565b95945050505050565b34156102cc5760405163b398979f60e01b815260040160405180910390fd5b6060826107645761075f826107ae565b6107a7565b815115801561077b57506001600160a01b0384163b155b156107a457604051639996b31560e01b81526001600160a01b0385166004820152602401610429565b50805b9392505050565b8051156107be5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000602082840312156107e957600080fd5b81356001600160e01b0319811681146107a757600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561082a57600080fd5b82356001600160a01b038116811461084157600080fd5b9150602083013567ffffffffffffffff8082111561085e57600080fd5b818501915085601f83011261087257600080fd5b81358181111561088457610884610801565b604051601f8201601f19908116603f011681019083821181831017156108ac576108ac610801565b816040528281528860208487010111156108c557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156109025781810151838201526020016108ea565b50506000910152565b602081526000825180602084015261092a8160408501602087016108e7565b601f01601f19169190910160400192915050565b60006020828403121561095057600080fd5b5051919050565b600082516109698184602087016108e7565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212207c12f5ab2343cdda3a6899f91db92f83da65594ceab6677871f94957899aaac164736f6c63430008180033c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2";

type UC_with_rgConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: UC_with_rgConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UC_with_rg__factory extends ContractFactory {
  constructor(...args: UC_with_rgConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UC_with_rg & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UC_with_rg__factory {
    return super.connect(runner) as UC_with_rg__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UC_with_rgInterface {
    return new Interface(_abi) as UC_with_rgInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UC_with_rg {
    return new Contract(address, _abi, runner) as unknown as UC_with_rg;
  }
}
