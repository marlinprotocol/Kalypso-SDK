/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  UC_with_rg,
  UC_with_rgInterface,
} from "../../../../contracts/mock/UCNew.sol/UC_with_rg";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "my_operation1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "my_operation2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "slot1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50600054610100900460ff16158080156100355750600054600160ff909116105b8061004f5750303b15801561004f575060005460ff166001145b6100a55760405162461bcd60e51b815260206004820152602e6024820152600080516020610ec083398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156100c8576000805461ff0019166101001790555b80156100fc576000805461ff001916905560405160018152600080516020610ee08339815191529060200160405180910390a15b50600054610100900460ff161580801561011d5750600054600160ff909116105b806101375750303b158015610137575060005460ff166001145b6101885760405162461bcd60e51b815260206004820152602e6024820152600080516020610ec083398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161009c565b6000805460ff1916600117905580156101ab576000805461ff0019166101001790555b80156101df576000805461ff001916905560405160018152600080516020610ee08339815191529060200160405180910390a15b50608051610ca961021760003960008181610175015281816101be0152818161025401528181610294015261031e0152610ca96000f3fe60806040526004361061007b5760003560e01c806352d1902d1161004e57806352d1902d146101205780638129fc1c14610135578063bc2e66e61461014a578063eefb44611461015657600080fd5b806301ffc9a7146100805780631f457cb5146100c65780633659cfe6146100eb5780634f1ef2861461010d575b600080fd5b34801561008c57600080fd5b506100b161009b366004610981565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b3480156100d257600080fd5b506100dd6102bd5481565b6040519081526020016100bd565b3480156100f757600080fd5b5061010b6101063660046109c7565b61016b565b005b61010b61011b3660046109f8565b61024a565b34801561012c57600080fd5b506100dd610311565b34801561014157600080fd5b5061010b6103c4565b34801561010b57600080fd5b34801561016257600080fd5b506100dd61048e565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101bc5760405162461bcd60e51b81526004016101b390610aba565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610205600080516020610c2d833981519152546001600160a01b031690565b6001600160a01b03161461022b5760405162461bcd60e51b81526004016101b390610b06565b60408051600080825260208201909252610247918391906104a6565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102925760405162461bcd60e51b81526004016101b390610aba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102db600080516020610c2d833981519152546001600160a01b031690565b6001600160a01b0316146103015760405162461bcd60e51b81526004016101b390610b06565b61030d828260016104a6565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103b15760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016101b3565b50600080516020610c2d83398151915290565b600054610100900460ff16158080156103e45750600054600160ff909116105b806103fe5750303b1580156103fe575060005460ff166001145b61041a5760405162461bcd60e51b81526004016101b390610b52565b6000805460ff19166001179055801561043d576000805461ff0019166101001790555b610445610616565b8015610247576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60006104986106d0565b506102bd5460016102f05590565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156104de576104d98361072b565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610538575060408051601f3d908101601f1916820190925261053591810190610ba0565b60015b61059b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101b3565b600080516020610c2d833981519152811461060a5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101b3565b506104d98383836107c7565b600054610100900460ff16158080156106365750600054600160ff909116105b806106505750303b158015610650575060005460ff166001145b61066c5760405162461bcd60e51b81526004016101b390610b52565b6000805460ff191660011790558015610445576000805461ff0019166101001790558015610247576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610483565b60026102f054036107235760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101b3565b60026102f055565b6001600160a01b0381163b6107985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101b3565b600080516020610c2d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6107d0836107f2565b6000825111806107dd5750805b156104d9576107ec8383610832565b50505050565b6107fb8161072b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606108578383604051806060016040528060278152602001610c4d6027913961085e565b9392505050565b6060600080856001600160a01b03168560405161087b9190610bdd565b600060405180830381855af49150503d80600081146108b6576040519150601f19603f3d011682016040523d82523d6000602084013e6108bb565b606091505b50915091506108cc868383876108d6565b9695505050505050565b6060831561094557825160000361093e576001600160a01b0385163b61093e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101b3565b508161094f565b61094f8383610957565b949350505050565b8151156109675781518083602001fd5b8060405162461bcd60e51b81526004016101b39190610bf9565b60006020828403121561099357600080fd5b81356001600160e01b03198116811461085757600080fd5b80356001600160a01b03811681146109c257600080fd5b919050565b6000602082840312156109d957600080fd5b610857826109ab565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610a0b57600080fd5b610a14836109ab565b9150602083013567ffffffffffffffff80821115610a3157600080fd5b818501915085601f830112610a4557600080fd5b813581811115610a5757610a576109e2565b604051601f8201601f19908116603f01168101908382118183101715610a7f57610a7f6109e2565b81604052828152886020848701011115610a9857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215610bb257600080fd5b5051919050565b60005b83811015610bd4578181015183820152602001610bbc565b50506000910152565b60008251610bef818460208701610bb9565b9190910192915050565b6020815260008251806020840152610c18816040850160208701610bb9565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122048c5b846a5c0e48451f76d66a09357a921ef6998c5d078d0093c6211e139275364736f6c63430008130033496e697469616c697a61626c653a20636f6e747261637420697320616c7265617f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498";

type UC_with_rgConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UC_with_rgConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UC_with_rg__factory extends ContractFactory {
  constructor(...args: UC_with_rgConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UC_with_rg & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UC_with_rg__factory {
    return super.connect(runner) as UC_with_rg__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UC_with_rgInterface {
    return new Interface(_abi) as UC_with_rgInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UC_with_rg {
    return new Contract(address, _abi, runner) as unknown as UC_with_rg;
  }
}
