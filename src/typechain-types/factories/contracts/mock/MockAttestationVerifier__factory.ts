/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { MockAttestationVerifier, MockAttestationVerifierInterface } from "../../../contracts/mock/MockAttestationVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "enclaveKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "PCR0",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "PCR1",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "PCR2",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "enclavePubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR2",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "timestampInMilliseconds",
            type: "uint256",
          },
        ],
        internalType: "struct IAttestationVerifier.Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638e760afe14610046578063ad48713914610059578063eac708a31461006f575b600080fd5b61005761005436600461014d565b50565b005b61005761006736600461018a565b505050505050565b61005761007d366004610264565b5050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156100ba576100ba610081565b60405290565b600082601f8301126100d157600080fd5b813567ffffffffffffffff808211156100ec576100ec610081565b604051601f8301601f19908116603f0116810190828211818310171561011457610114610081565b8160405283815286602085880101111561012d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561015f57600080fd5b813567ffffffffffffffff81111561017657600080fd5b610182848285016100c0565b949350505050565b60008060008060008060c087890312156101a357600080fd5b863567ffffffffffffffff808211156101bb57600080fd5b6101c78a838b016100c0565b975060208901359150808211156101dd57600080fd5b6101e98a838b016100c0565b965060408901359150808211156101ff57600080fd5b61020b8a838b016100c0565b9550606089013591508082111561022157600080fd5b61022d8a838b016100c0565b9450608089013591508082111561024357600080fd5b5061025089828a016100c0565b92505060a087013590509295509295509295565b6000806040838503121561027757600080fd5b823567ffffffffffffffff8082111561028f57600080fd5b61029b868387016100c0565b935060208501359150808211156102b157600080fd5b9084019060a082870312156102c557600080fd5b6102cd610097565b8235828111156102dc57600080fd5b6102e8888286016100c0565b8252506020830135828111156102fd57600080fd5b610309888286016100c0565b60208301525060408301358281111561032157600080fd5b61032d888286016100c0565b60408301525060608301358281111561034557600080fd5b610351888286016100c0565b60608301525060808301356080820152809350505050925092905056fea264697066735822122043def41302dd8896cd7a93b18b349fdbacfa6df7fbed42d0a4c9ad97e43aedfe64736f6c63430008180033";

type MockAttestationVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockAttestationVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAttestationVerifier__factory extends ContractFactory {
  constructor(...args: MockAttestationVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockAttestationVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAttestationVerifier__factory {
    return super.connect(runner) as MockAttestationVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAttestationVerifierInterface {
    return new Interface(_abi) as MockAttestationVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockAttestationVerifier {
    return new Contract(address, _abi, runner) as unknown as MockAttestationVerifier;
  }
}
