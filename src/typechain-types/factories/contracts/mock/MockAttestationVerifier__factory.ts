/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { MockAttestationVerifier, MockAttestationVerifierInterface } from "../../../contracts/mock/MockAttestationVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "attestation",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "enclaveKey",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "PCR0",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "PCR1",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "PCR2",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "enclaveCPUs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "enclaveMemory",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638e760afe14610046578063ac0f0bd514610059578063b9209e3314610071575b600080fd5b61005761005436600461013a565b50565b005b610057610067366004610177565b5050505050505050565b61008561007f366004610264565b50600090565b60405190815260200160405180910390f35b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100be57600080fd5b813567ffffffffffffffff808211156100d9576100d9610097565b604051601f8301601f19908116603f0116810190828211818310171561010157610101610097565b8160405283815286602085880101111561011a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561014c57600080fd5b813567ffffffffffffffff81111561016357600080fd5b61016f848285016100ad565b949350505050565b600080600080600080600080610100898b03121561019457600080fd5b883567ffffffffffffffff808211156101ac57600080fd5b6101b88c838d016100ad565b995060208b01359150808211156101ce57600080fd5b6101da8c838d016100ad565b985060408b01359150808211156101f057600080fd5b6101fc8c838d016100ad565b975060608b013591508082111561021257600080fd5b61021e8c838d016100ad565b965060808b013591508082111561023457600080fd5b506102418b828c016100ad565b989b979a50959894979660a0860135965060c08601359560e00135945092505050565b60006020828403121561027657600080fd5b81356001600160a01b038116811461028d57600080fd5b939250505056fea2646970667358221220ccb73130be3c050fe60320fd4d0a8511dcbf49cbd370cef4b0577c6f596aab8964736f6c63430008130033";

type MockAttestationVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockAttestationVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAttestationVerifier__factory extends ContractFactory {
  constructor(...args: MockAttestationVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockAttestationVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAttestationVerifier__factory {
    return super.connect(runner) as MockAttestationVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAttestationVerifierInterface {
    return new Interface(_abi) as MockAttestationVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockAttestationVerifier {
    return new Contract(address, _abi, runner) as unknown as MockAttestationVerifier;
  }
}
