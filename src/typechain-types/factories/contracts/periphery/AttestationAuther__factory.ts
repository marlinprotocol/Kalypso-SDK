/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { AttestationAuther, AttestationAutherInterface } from "../../../contracts/periphery/AttestationAuther";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAttestationVerifier",
        name: "attestationVerifier",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxAge",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AttestationAutherAttestationTooOld",
    type: "error",
  },
  {
    inputs: [],
    name: "AttestationAutherImageNotInFamily",
    type: "error",
  },
  {
    inputs: [],
    name: "AttestationAutherImageNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "AttestationAutherKeyNotVerified",
    type: "error",
  },
  {
    inputs: [],
    name: "AttestationAutherMismatchedLengths",
    type: "error",
  },
  {
    inputs: [],
    name: "AttestationAutherPCRsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "AttestationAutherPubkeyLengthInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "family",
        type: "bytes32",
      },
    ],
    name: "EnclaveImageAddedToFamily",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "family",
        type: "bytes32",
      },
    ],
    name: "EnclaveImageRemovedFromFamily",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
    ],
    name: "EnclaveImageRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "PCR0",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "PCR1",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "PCR2",
        type: "bytes",
      },
    ],
    name: "EnclaveImageWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "enclaveAddress",
        type: "address",
      },
    ],
    name: "EnclaveKeyRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "enclaveAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "enclavePubKey",
        type: "bytes",
      },
    ],
    name: "EnclaveKeyVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "enclaveAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "enclavePubKey",
        type: "bytes",
      },
    ],
    name: "EnclaveKeyWhitelisted",
    type: "event",
  },
  {
    inputs: [],
    name: "ATTESTATION_MAX_AGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ATTESTATION_VERIFIER",
    outputs: [
      {
        internalType: "contract IAttestationVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_key",
        type: "address",
      },
    ],
    name: "getVerifiedKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_imageId",
        type: "bytes32",
      },
    ],
    name: "getWhitelistedImage",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "PCR0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR2",
            type: "bytes",
          },
        ],
        internalType: "struct AttestationAuther.EnclaveImage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "imageId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "family",
        type: "bytes32",
      },
    ],
    name: "isImageInFamily",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "enclavePubKey",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR0",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR1",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "PCR2",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "timestampInMilliseconds",
            type: "uint256",
          },
        ],
        internalType: "struct IAttestationVerifier.Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "verifyEnclaveKey",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610ae6380380610ae683398101604081905261002f91610045565b6001600160a01b0390911660805260a05261007f565b6000806040838503121561005857600080fd5b82516001600160a01b038116811461006f57600080fd5b6020939093015192949293505050565b60805160a051610a356100b16000396000818160fe015261040c01526000818161012501526104780152610a356000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301d58fa3146100675780632410f6ba146100a35780636b5b21a6146100c357806375847b84146100e65780639aec990e146100f9578063cd79f90614610120575b600080fd5b6100906100753660046105ad565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b6100b66100b13660046105d6565b61015f565b60405161009a919061063f565b6100d66100d13660046106a0565b610358565b604051901515815260200161009a565b6100d66100f436600461078e565b61037c565b6100907f000000000000000000000000000000000000000000000000000000000000000081565b6101477f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161009a565b61018360405180606001604052806060815260200160608152602001606081525090565b600082815260208190526040908190208151606081019092528054829082906101ab90610898565b80601f01602080910402602001604051908101604052809291908181526020018280546101d790610898565b80156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b5050505050815260200160018201805461023d90610898565b80601f016020809104026020016040519081016040528092919081815260200182805461026990610898565b80156102b65780601f1061028b576101008083540402835291602001916102b6565b820191906000526020600020905b81548152906001019060200180831161029957829003601f168201915b505050505081526020016002820180546102cf90610898565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb90610898565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b5050505050815250509050919050565b600081815260026020908152604080832085845290915290205460ff165b92915050565b6000610388838361038f565b9392505050565b6000808260200151836040015184606001516040516020016103b3939291906108d2565b60408051601f19818403018152918152815160209283012060008181529283905291208054919250906103e590610898565b905060000361040757604051631c62560b60e11b815260040160405180910390fd5b6104317f000000000000000000000000000000000000000000000000000000000000000042610915565b6103e884608001516104439190610936565b1161046157604051630cb02f0560e11b815260040160405180910390fd5b60405163eac708a360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063eac708a3906104af9087908790600401610958565b60006040518083038186803b1580156104c757600080fd5b505afa1580156104db573d6000803e3d6000fd5b5050505060006104ee846000015161057d565b6001600160a01b0381166000908152600160205260409020549091501561051a57600092505050610376565b6001600160a01b03811660008181526001602052604090819020849055855190518492917fbb4d6428d53ea924d94be0488473deb5c0a70c979f8477d21911cb5bee4037fd9161056a91906109ec565b60405180910390a3506001949350505050565b600081516040146105a15760405163bd9c80c160e01b815260040160405180910390fd5b50805160209091012090565b6000602082840312156105bf57600080fd5b81356001600160a01b038116811461038857600080fd5b6000602082840312156105e857600080fd5b5035919050565b60005b8381101561060a5781810151838201526020016105f2565b50506000910152565b6000815180845261062b8160208601602086016105ef565b601f01601f19169290920160200192915050565b60208152600082516060602084015261065b6080840182610613565b90506020840151601f19808584030160408601526106798383610613565b92506040860151915080858403016060860152506106978282610613565b95945050505050565b600080604083850312156106b357600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156106fb576106fb6106c2565b60405290565b600082601f83011261071257600080fd5b813567ffffffffffffffff8082111561072d5761072d6106c2565b604051601f8301601f19908116603f01168101908282118183101715610755576107556106c2565b8160405283815286602085880101111561076e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156107a157600080fd5b823567ffffffffffffffff808211156107b957600080fd5b6107c586838701610701565b935060208501359150808211156107db57600080fd5b9084019060a082870312156107ef57600080fd5b6107f76106d8565b82358281111561080657600080fd5b61081288828601610701565b82525060208301358281111561082757600080fd5b61083388828601610701565b60208301525060408301358281111561084b57600080fd5b61085788828601610701565b60408301525060608301358281111561086f57600080fd5b61087b88828601610701565b606083015250608083013560808201528093505050509250929050565b600181811c908216806108ac57607f821691505b6020821081036108cc57634e487b7160e01b600052602260045260246000fd5b50919050565b600084516108e48184602089016105ef565b8451908301906108f88183602089016105ef565b845191019061090b8183602088016105ef565b0195945050505050565b8181038181111561037657634e487b7160e01b600052601160045260246000fd5b60008261095357634e487b7160e01b600052601260045260246000fd5b500490565b60408152600061096b6040830185610613565b8281036020840152835160a0825261098660a0830182610613565b90506020850151828203602084015261099f8282610613565b915050604085015182820360408401526109b98282610613565b915050606085015182820360608401526109d38282610613565b9150506080850151608083015280925050509392505050565b602081526000610388602083018461061356fea2646970667358221220f042aacda536b02b297d45da7b0b679e9114bb5ec4d0ce2f1f772d3f353a733e64736f6c63430008180033";

type AttestationAutherConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: AttestationAutherConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationAuther__factory extends ContractFactory {
  constructor(...args: AttestationAutherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    attestationVerifier: AddressLike,
    maxAge: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(attestationVerifier, maxAge, overrides || {});
  }
  override deploy(attestationVerifier: AddressLike, maxAge: BigNumberish, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(attestationVerifier, maxAge, overrides || {}) as Promise<
      AttestationAuther & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AttestationAuther__factory {
    return super.connect(runner) as AttestationAuther__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationAutherInterface {
    return new Interface(_abi) as AttestationAutherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AttestationAuther {
    return new Contract(address, _abi, runner) as unknown as AttestationAuther;
  }
}
