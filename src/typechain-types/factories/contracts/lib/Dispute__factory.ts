/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Dispute, DisputeInterface } from "../../../contracts/lib/Dispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract EntityKeyRegistry",
        name: "_er",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ENTITY_KEY_REGISTRY",
    outputs: [
      {
        internalType: "contract EntityKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "askId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proverData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "invalidProofSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "expectedImageId",
        type: "bytes32",
      },
    ],
    name: "checkDispute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516107d93803806107d983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610748610091600039600081816040015261025c01526107486000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063661de5ac1461003b578063730fec291461007f575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d3660046105cd565b6100a2565b6040519015158152602001610076565b60006100e887878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508992506100f3915050565b979650505050505050565b6000808083158061012357507fcd2e66bf0b91eeedc6c648ae9335a78d7c9a4ab0ef33612a824d91cdc68a4f2184145b9050801561015d578787876040516020016101409392919061064f565b604051602081830303815290604052805190602001209150610182565b60408051602081018a9052016040516020818303038152906040528051906020012091505b60006101db836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b905060006101e98288610311565b604080518082019091526002815261413360f01b60208201529091506001600160a01b0382166102355760405162461bcd60e51b815260040161022c9190610685565b60405180910390fd5b50604051637e201b6560e01b81526001600160a01b038281166004830152602482018890527f00000000000000000000000000000000000000000000000000000000000000001690637e201b6590604401602060405180830381865afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c791906106d3565b60405180604001604052806002815260200161473760f01b815250906103005760405162461bcd60e51b815260040161022c9190610685565b5060019a9950505050505050505050565b60008060006103208585610335565b9150915061032d8161037a565b509392505050565b600080825160410361036b5760208301516040840151606085015160001a61035f878285856104c7565b94509450505050610373565b506000905060025b9250929050565b600081600481111561038e5761038e6106fc565b036103965750565b60018160048111156103aa576103aa6106fc565b036103f75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161022c565b600281600481111561040b5761040b6106fc565b036104585760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161022c565b600381600481111561046c5761046c6106fc565b036104c45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161022c565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156104fe5750600090506003610582565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610552573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661057b57600060019250925050610582565b9150600090505b94509492505050565b60008083601f84011261059d57600080fd5b50813567ffffffffffffffff8111156105b557600080fd5b60208301915083602082850101111561037357600080fd5b600080600080600080608087890312156105e657600080fd5b86359550602087013567ffffffffffffffff8082111561060557600080fd5b6106118a838b0161058b565b9097509550604089013591508082111561062a57600080fd5b5061063789828a0161058b565b979a9699509497949695606090950135949350505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b600060208083528351808285015260005b818110156106b257858101830151858201604001528201610696565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156106e557600080fd5b815180151581146106f557600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220af28cbc9153f4be523500d17459dcfd1c0ae01790578e124cacbebe072f06a5c64736f6c63430008130033";

type DisputeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DisputeConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dispute__factory extends ContractFactory {
  constructor(...args: DisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(_er: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_er, overrides || {});
  }
  override deploy(_er: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(_er, overrides || {}) as Promise<
      Dispute & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dispute__factory {
    return super.connect(runner) as Dispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeInterface {
    return new Interface(_abi) as DisputeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dispute {
    return new Contract(address, _abi, runner) as unknown as Dispute;
  }
}
