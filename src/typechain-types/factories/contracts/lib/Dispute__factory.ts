/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Dispute, DisputeInterface } from "../../../contracts/lib/Dispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract EntityKeyRegistry",
        name: "_er",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "ENTITY_KEY_REGISTRY",
    outputs: [
      {
        internalType: "contract EntityKeyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "askId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proverData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "invalidProofSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "expectedFamilyId",
        type: "bytes32",
      },
    ],
    name: "checkDispute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161062838038061062883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161059761009160003960008181604001526101d901526105976000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063661de5ac1461003b578063730fec291461007f575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d366004610493565b6100a2565b6040519015158152602001610076565b60006100e887878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508992506100f3915050565b979650505050505050565b60008086868660405160200161010b93929190610515565b604051602081830303815290604052805190602001209050600061017c826040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050600061018a8287610242565b90506001600160a01b0381166101b357604051631e1d0ab560e01b815260040160405180910390fd5b6040516372105aaf60e01b8152600481018690526001600160a01b0382811660248301527f000000000000000000000000000000000000000000000000000000000000000016906372105aaf9060440160006040518083038186803b15801561021b57600080fd5b505afa15801561022f573d6000803e3d6000fd5b5060019c9b505050505050505050505050565b600080600080610252868661026c565b92509250925061026282826102b9565b5090949350505050565b600080600083516041036102a65760208401516040850151606086015160001a6102988882858561037b565b9550955095505050506102b2565b50508151600091506002905b9250925092565b60008260038111156102cd576102cd61054b565b036102d6575050565b60018260038111156102ea576102ea61054b565b036103085760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561031c5761031c61054b565b036103425760405163fce698f760e01b8152600481018290526024015b60405180910390fd5b60038260038111156103565761035661054b565b03610377576040516335e2f38360e21b815260048101829052602401610339565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156103b65750600091506003905082610440565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561040a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661043657506000925060019150829050610440565b9250600091508190505b9450945094915050565b60008083601f84011261045c57600080fd5b50813567ffffffffffffffff81111561047457600080fd5b60208301915083602082850101111561048c57600080fd5b9250929050565b600080600080600080608087890312156104ac57600080fd5b86359550602087013567ffffffffffffffff808211156104cb57600080fd5b6104d78a838b0161044a565b909750955060408901359150808211156104f057600080fd5b506104fd89828a0161044a565b979a9699509497949695606090950135949350505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f5197560eea28ca0fc9bd53640acd9d12b5e0628ab3a72ac2c52931a3b0ec32464736f6c63430008180033";

type DisputeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DisputeConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dispute__factory extends ContractFactory {
  constructor(...args: DisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(_er: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_er, overrides || {});
  }
  override deploy(_er: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(_er, overrides || {}) as Promise<
      Dispute & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dispute__factory {
    return super.connect(runner) as Dispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeInterface {
    return new Interface(_abi) as DisputeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dispute {
    return new Contract(address, _abi, runner) as unknown as Dispute;
  }
}
