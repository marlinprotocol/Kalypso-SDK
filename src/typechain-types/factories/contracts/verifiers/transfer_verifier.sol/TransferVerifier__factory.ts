/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { TransferVerifier, TransferVerifierInterface } from "../../../../contracts/verifiers/transfer_verifier.sol/TransferVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
      {
        internalType: "uint256[8]",
        name: "p",
        type: "uint256[8]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610de1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806368444dc714610030575b600080fd5b6100b060048036036101a081101561004757600080fd5b810190808060a0019060058060200260405190810160405280929190826005602002808284376000920191909152505060408051610100818101909252929594938181019392509060089083908390808284376000920191909152509194506100c49350505050565b604080519115158252519081900360200190f35b6000805b60088160ff16101561014d577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47838260ff166008811061010457fe5b6020020151106101455760405162461bcd60e51b8152600401808060200182810382526022815260200180610d8a6022913960400191505060405180910390fd5b6001016100c8565b50610156610bd7565b6040805180820182528451815260208086015181830152908352815160808082018452606080880151838601908152888601519184019190915282528351808501855260a08801518152908701518184015281830152838201528151808301835260c0860151815260e086015191810191909152908201526101d6610c09565b6101de610335565b90506101e8610c50565b6040518060400160405280600081526020016000815250905061022081836080015160006006811061021657fe5b60200201516107ac565b905060005b60058110156102f6577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000187826005811061025b57fe5b6020020151106102b2576040805162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c6400604482015290519081900360640190fd5b6102ec826102e7856080015184600101600681106102cc57fe5b60200201518a85600581106102dd57fe5b602002015161084c565b6107ac565b9150600101610225565b5061032b61030784600001516108d2565b84602001518460000151856020015185876040015189604001518960600151610979565b9695505050505050565b61033d610c09565b6040805180820182527f1783c05cfd27b8e7f4465070d9db3c6bf5743fe8110a56e7f4c7004eba9a00fc81527f0a157f5376a6025a410a6238d3a43c61fc78a1a80994b67fa0caecf61cb1d69e6020808301919091529083528151608080820184527f1387f8d1ead568859c78cb8d93818422f39f9a9cd8fc6864c9e8e97399dd73718285019081527f2a1add31b3f516c479de85ffa3247809f6844d944afa1b20a39c1202f318e4ae606080850191909152908352845180860186527f14bd6f10abe80f51276019938f772a5f85c41b27060ebfeea9be179680e9f65781527f076499d477aa5a7ed340e7669dacd0e05dcd7621a6e811c7ad4ea8db0c757244818601528385015285840192909252835180820185527f0244147fb7127d0651d441301f213b966e4d78174b7be7def2c73831ac1481c88186019081527f2756f48b7479c7838bc678a29c8dc8b51a88213fa4c2e66793d8f366912c85b5828501528152845180860186527f1ab9856ba2e542932833dada4ddc24329530de122e081cb3ff7e43faf757dab981527f088dee75ca26b36c7f8053dd6a083400b6885ddb73915848ca888f004e1ec3e8818601528185015285850152835180820185527f05a93687d416925bf2b45a25c102b00b8d7f2b9820f922fd1c48c733fa6145c08186019081527f22885b98fa8e1edad27666b3f3cadbd89612dfbbc521c4a777fa447ed0e70054828501528152845180860186527f2a4242ca191ba88636025d067cd4cc05f24c99db3804ebca5597235d551d4b5a81527f13b2441a12b641d77bcf0549b83eb73cf82ac3fe1be62a5b708af3a3a9d13ecb818601528185015282860152835180850185527f1d9d2e03f3e4beb009c9a1f1d0c3dcafcfb2f10968bb02d369ab64482f85ee5981527f190c9ea0e93cce223ce84d00defe06b769d35f2e575e94b5ae8ae535ddaaf12f81850152818601805191909152845180860186527f2550938901cba1ba1d514d28b20d393b846cc49f58952f70a7cf3a4e0bf5fbdc81527f136ec7caa3cb182562bf3a8faeb08dd5bdca4885637575a3d20e8409aa94f13a818601528151850152845180860186527f1ac7964c82c80319d647fe9a948a8efd0f3054b07b9c85c4113e55430fc80e9281527ee2338be33f7c6fe52034f662e1477827355a8d1a5216556c3c7818be9fa6f5818601528151860152845180860186527f17319e998303439713b8e089b0a16252026c300097ecae8bd6234c1be864a10c81527f1aff63eabbf040f3c35511d586cb86467dd2ffd64ea3bfb2f6174ecdbf9d073e81860152815190930192909252835180850185527f1ff8e62e7b7f750ee819a2874dbad80733d9ff54b4213ee471296ea0da9c151e81527f1b37d0b5ad96930cd3f2e2727a6543a21017456a075ea66ea17418d1ff69ff4a8185015282519091015282518084019093527f2ce5342771e970118a8f7b2ab4a78fa9ee30166812f8642777b7a7d529772e6f83527f0a5583f717f390833b75b1ac9c72348a37a573d8434c830a53df329100d9db4e918301919091525160a0015290565b6107b4610c50565b6107bc610c6a565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508080156107fa576107fc565bfe5b5080610844576040805162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b604482015290519081900360640190fd5b505092915050565b610854610c50565b61085c610c88565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508080156107fa575080610844576040805162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b604482015290519081900360640190fd5b6108da610c50565b81511580156108eb57506020820151155b1561090a57506040805180820190915260008082526020820152610974565b6040518060400160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518161094c57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703905290505b919050565b6000610983610ca6565b60405180608001604052808b81526020018981526020018781526020018581525090506109ae610cd3565b50604080516080810182528a81526020810189905280820187905260608082018690528251601880825261032082019094529192918281602001602082028036833701905050905060005b6004811015610b505760068102858260048110610a1257fe5b6020020151518351849083908110610a2657fe5b602002602001018181525050858260048110610a3e57fe5b602002015160200151838260010181518110610a5657fe5b602002602001018181525050848260048110610a6e57fe5b602002015151518351849060028401908110610a8657fe5b602002602001018181525050848260048110610a9e57fe5b60200201515160016020020151838260030181518110610aba57fe5b602002602001018181525050848260048110610ad257fe5b602002015160200151600060028110610ae757fe5b6020020151838260040181518110610afb57fe5b602002602001018181525050848260048110610b1357fe5b602002015160200151600160028110610b2857fe5b6020020151838260050181518110610b3c57fe5b6020908102919091010152506001016109f9565b50610b59610d00565b6000602082602086026020860160086107d05a03fa90508080156107fa575080610bc2576040805162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b604482015290519081900360640190fd5b505115159d9c50505050505050505050505050565b6040518060600160405280610bea610c50565b8152602001610bf7610d1e565b8152602001610c04610c50565b905290565b6040518060a00160405280610c1c610c50565b8152602001610c29610d1e565b8152602001610c36610d1e565b8152602001610c43610d1e565b8152602001610c04610d3e565b604051806040016040528060008152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004905b610cbd610c50565b815260200190600190039081610cb55790505090565b60405180608001604052806004905b610cea610d1e565b815260200190600190039081610ce25790505090565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280610d31610d6b565b8152602001610c04610d6b565b6040518060c001604052806006905b610d55610c50565b815260200190600190039081610d4d5790505090565b6040518060400160405280600290602082028036833750919291505056fe76657269666965722d70726f6f662d656c656d656e742d6774652d7072696d652d71a2646970667358221220a154c30e12397e5afd261ebc0e815d94b6c4388eea2926159a364df8645adca764736f6c634300060c0033";

type TransferVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TransferVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferVerifier__factory extends ContractFactory {
  constructor(...args: TransferVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TransferVerifier__factory {
    return super.connect(runner) as TransferVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferVerifierInterface {
    return new Interface(_abi) as TransferVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TransferVerifier {
    return new Contract(address, _abi, runner) as unknown as TransferVerifier;
  }
}
