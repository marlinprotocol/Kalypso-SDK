/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IVerifier_zksync, IVerifier_zksyncInterface } from "../../../../contracts/verifiers/IVerifier.sol/IVerifier_zksync";

const _abi = [
  {
    inputs: [],
    name: "verificationKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_publicInputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_proof",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_recursiveAggregationInput",
        type: "uint256[]",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVerifier_zksync__factory {
  static readonly abi = _abi;
  static createInterface(): IVerifier_zksyncInterface {
    return new Interface(_abi) as IVerifier_zksyncInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVerifier_zksync {
    return new Contract(address, _abi, runner) as unknown as IVerifier_zksync;
  }
}
