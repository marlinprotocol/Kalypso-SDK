/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { ZkbVerifier, ZkbVerifierInterface } from "../../../../contracts/verifiers/zkb_verifier.sol/ZkbVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
      {
        internalType: "uint256[8]",
        name: "p",
        type: "uint256[8]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610de2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806368444dc714610030575b600080fd5b6100b060048036036101a081101561004757600080fd5b810190808060a0019060058060200260405190810160405280929190826005602002808284376000920191909152505060408051610100818101909252929594938181019392509060089083908390808284376000920191909152509194506100c49350505050565b604080519115158252519081900360200190f35b6000805b60088160ff16101561014d577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47838260ff166008811061010457fe5b6020020151106101455760405162461bcd60e51b8152600401808060200182810382526022815260200180610d8b6022913960400191505060405180910390fd5b6001016100c8565b50610156610bd8565b6040805180820182528451815260208086015181830152908352815160808082018452606080880151838601908152888601519184019190915282528351808501855260a08801518152908701518184015281830152838201528151808301835260c0860151815260e086015191810191909152908201526101d6610c0a565b6101de610335565b90506101e8610c51565b6040518060400160405280600081526020016000815250905061022081836080015160006006811061021657fe5b60200201516107ad565b905060005b60058110156102f6577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000187826005811061025b57fe5b6020020151106102b2576040805162461bcd60e51b815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c6400604482015290519081900360640190fd5b6102ec826102e7856080015184600101600681106102cc57fe5b60200201518a85600581106102dd57fe5b602002015161084d565b6107ad565b9150600101610225565b5061032b61030784600001516108d3565b8460200151846000015185602001518587604001518960400151896060015161097a565b9695505050505050565b61033d610c0a565b6040805180820182527f26289cd8abd1fa2a98d463c99b2c27f4d93fc00e39380d234ac13221ae9b04a181527f0e74e5426db6b07b4c5fdeb9c845cd7ad268e017ec852d569c7b7889a121c6306020808301919091529083528151608080820184527f1888ecd7b2c8cfeb687ad2a234c85b829156a830e7ec17e8f8fa3670191fbbd48285019081527f0d4a12a09a90d343c5bf278dac62a5bbdfd23e79600f9199470e1d25e871d0d4606080850191909152908352845180860186527f2a091fd6eb117e394f56d1728002cbc2ac0d80b181a4c765df0e6df8e1c85e4781527f1903bd3a843a21c30f289c0c16840b09d059bf7c46298c59d3e3f14182367e58818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835180820185527f28bb9b75d5e8b3215a843eb23ec1b53c2264b6cc1bbcbb47a9f70f22cd4bfbd68186019081527f1078c311c3953fae2fff7734cbfc62c96279fc5ffa282fef0ea766b764a7d4ac828501528152845180860186527f2028ce026bc83d3fe9ab5ed8d8b0502e1bd59834eb1d2f8d8edcc809d69fb4b781527f1a0259643a74aa5bb30eb2d3bfee4417eff35c6e95e94e11f5f8e5965d0d3e64818601528185015282860152835180850185527f0d50b8ce497318b90465d656dc9442823e02c7ec85acd1f695329ee650fa17b281527f1d35aee535be79857a62e59bd74732eba440ebf2b030aec5e4bd016744d6c24781850152818601805191909152845180860186527f1bfb0c3e277ad4656e8386c264a1ea6e74f44109c3c527255f4902b66e04727381527f0d7b3bf0d9848b535bf3472dcb73ed6db7d52dd07fcef7beefd5fec464d2925c818601528151850152845180860186527f1ccc51ad32bb3596a276c57055c2b5fd28642b8df13eb1d4fae818bff191f5a481527f0e1ea72229ee5b5505d68ff74527ef8dab3b2054778adef57a3183548c23da70818601528151860152845180860186527f1f48eee9798d097387141842caa49b38a876a23b3568bbc2bec89ef01e002ed781527f28e44893645b6413b102d11c965217ef231e2d7d8c6ef2d4ae2ed3177ba17e6b81860152815190930192909252835180850185527f1e59e34c77ddf057ef1c5e3422455c47b77cfaf7c90942c6250b42cf4256ca8981527f27aa6ec49d75373ee36a6ec312d7f3dce59ddbb0b5827e6637feb1cda9ff416a8185015282519091015282518084019093527f19fe418677e743503ed243fb4ef313976dd310e073665abec562146ebe68555983527f0c64f6e1a0fd0e0f38603df60a84dde299d70f74ac8348d435e07202cc57739b918301919091525160a0015290565b6107b5610c51565b6107bd610c6b565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508080156107fb576107fd565bfe5b5080610845576040805162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5859190b59985a5b195960721b604482015290519081900360640190fd5b505092915050565b610855610c51565b61085d610c89565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508080156107fb575080610845576040805162461bcd60e51b81526020600482015260126024820152711c185a5c9a5b99cb5b5d5b0b59985a5b195960721b604482015290519081900360640190fd5b6108db610c51565b81511580156108ec57506020820151155b1561090b57506040805180820190915260008082526020820152610975565b6040518060400160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4784602001518161094d57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703905290505b919050565b6000610984610ca7565b60405180608001604052808b81526020018981526020018781526020018581525090506109af610cd4565b50604080516080810182528a81526020810189905280820187905260608082018690528251601880825261032082019094529192918281602001602082028036833701905050905060005b6004811015610b515760068102858260048110610a1357fe5b6020020151518351849083908110610a2757fe5b602002602001018181525050858260048110610a3f57fe5b602002015160200151838260010181518110610a5757fe5b602002602001018181525050848260048110610a6f57fe5b602002015151518351849060028401908110610a8757fe5b602002602001018181525050848260048110610a9f57fe5b60200201515160016020020151838260030181518110610abb57fe5b602002602001018181525050848260048110610ad357fe5b602002015160200151600060028110610ae857fe5b6020020151838260040181518110610afc57fe5b602002602001018181525050848260048110610b1457fe5b602002015160200151600160028110610b2957fe5b6020020151838260050181518110610b3d57fe5b6020908102919091010152506001016109fa565b50610b5a610d01565b6000602082602086026020860160086107d05a03fa90508080156107fb575080610bc3576040805162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b604482015290519081900360640190fd5b505115159d9c50505050505050505050505050565b6040518060600160405280610beb610c51565b8152602001610bf8610d1f565b8152602001610c05610c51565b905290565b6040518060a00160405280610c1d610c51565b8152602001610c2a610d1f565b8152602001610c37610d1f565b8152602001610c44610d1f565b8152602001610c05610d3f565b604051806040016040528060008152602001600081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004905b610cbe610c51565b815260200190600190039081610cb65790505090565b60405180608001604052806004905b610ceb610d1f565b815260200190600190039081610ce35790505090565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280610d32610d6c565b8152602001610c05610d6c565b6040518060c001604052806006905b610d56610c51565b815260200190600190039081610d4e5790505090565b6040518060400160405280600290602082028036833750919291505056fe76657269666965722d70726f6f662d656c656d656e742d6774652d7072696d652d71a2646970667358221220f2674b3d29fc5d95a23f757e645643fdffe2f72bafda81fc5d8e226ab09acebd64736f6c634300060c0033";

type ZkbVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ZkbVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkbVerifier__factory extends ContractFactory {
  constructor(...args: ZkbVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZkbVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZkbVerifier__factory {
    return super.connect(runner) as ZkbVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkbVerifierInterface {
    return new Interface(_abi) as ZkbVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZkbVerifier {
    return new Contract(address, _abi, runner) as unknown as ZkbVerifier;
  }
}
