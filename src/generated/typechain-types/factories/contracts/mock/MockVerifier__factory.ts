/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { MockVerifier, MockVerifierInterface } from "../../../contracts/mock/MockVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "verifyInputs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638e760afe1461003b578063a6dfbc7f1461006b575b600080fd5b61005560048036038101906100509190610122565b61009b565b604051610062919061018a565b60405180910390f35b61008560048036038101906100809190610122565b6100a7565b604051610092919061018a565b60405180910390f35b60006001905092915050565b60006001905092915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126100e2576100e16100bd565b5b8235905067ffffffffffffffff8111156100ff576100fe6100c2565b5b60208301915083600182028301111561011b5761011a6100c7565b5b9250929050565b60008060208385031215610139576101386100b3565b5b600083013567ffffffffffffffff811115610157576101566100b8565b5b610163858286016100cc565b92509250509250929050565b60008115159050919050565b6101848161016f565b82525050565b600060208201905061019f600083018461017b565b9291505056fea264697066735822122099d5d7f5a4210e0de0dc09527f30e8ee6eb46d3b7f3b3cbb82f53904c6f2b44664736f6c63430008130033";

type MockVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockVerifier__factory extends ContractFactory {
  constructor(...args: MockVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockVerifier__factory {
    return super.connect(runner) as MockVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockVerifierInterface {
    return new Interface(_abi) as MockVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockVerifier {
    return new Contract(address, _abi, runner) as unknown as MockVerifier;
  }
}
