/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Error, ErrorInterface } from "../../../contracts/lib/Error";

const _abi = [
  {
    inputs: [],
    name: "ALREADY_EXISTS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CANNOT_BE_SAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CANNOT_BE_ZERO",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CAN_N0T_BE_SLASHED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOES_NOT_EXISTS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HAS_A_PENDING_WORK",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_REWARD",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_GENERATOR",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_INPUTS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_PROOF",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVAlID_SENDER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONLY_ADMIN_CAN_CALL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONLY_TO_IDLE_GENERATORS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONLY_WORKING_GENERATORS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHOULD_BE_CREATED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHOULD_BE_IN_ASSIGNED_STATE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHOULD_BE_IN_CREATE_STATE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHOULD_BE_IN_CROSSED_DEADLINE_STATE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHOULD_BE_IN_EXPIRED_STATE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61088d610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061012b5760003560e01c8063712eb087116100b7578063b4bc599c1161007b578063b4bc599c146102d4578063bd3085b2146102f2578063ccad0c4a14610310578063ddacd5531461032e578063fd9e407f1461034c5761012b565b8063712eb0871461023e57806374b167481461025c5780639295c75b1461027a5780639d1e55e014610298578063a9edb3be146102b65761012b565b80632026c28b116100fe5780632026c28b146101a8578063235cfc49146101c65780633c776567146101e45780634aac153d146102025780634fe2755c146102205761012b565b80630c8d1b0a146101305780630df3560f1461014e578063190ca58b1461016c5780631f1138e01461018a575b600080fd5b61013861036a565b6040516101459190610835565b60405180910390f35b6101566103a3565b6040516101639190610835565b60405180910390f35b6101746103dc565b6040516101819190610835565b60405180910390f35b610192610415565b60405161019f9190610835565b60405180910390f35b6101b061044e565b6040516101bd9190610835565b60405180910390f35b6101ce610487565b6040516101db9190610835565b60405180910390f35b6101ec6104c0565b6040516101f99190610835565b60405180910390f35b61020a6104f9565b6040516102179190610835565b60405180910390f35b610228610532565b6040516102359190610835565b60405180910390f35b61024661056b565b6040516102539190610835565b60405180910390f35b6102646105a4565b6040516102719190610835565b60405180910390f35b6102826105dd565b60405161028f9190610835565b60405180910390f35b6102a0610616565b6040516102ad9190610835565b60405180910390f35b6102be61064f565b6040516102cb9190610835565b60405180910390f35b6102dc610688565b6040516102e99190610835565b60405180910390f35b6102fa6106c1565b6040516103079190610835565b60405180910390f35b6103186106fa565b6040516103259190610835565b60405180910390f35b610336610733565b6040516103439190610835565b60405180910390f35b61035461076c565b6040516103619190610835565b60405180910390f35b6040518060400160405280600281526020017f313700000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313200000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f340000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313300000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313900000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313500000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313100000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f370000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f390000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313400000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f330000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f380000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f350000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313600000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600181526020017f360000000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600281526020017f313800000000000000000000000000000000000000000000000000000000000081525081565b600081519050919050565b600082825260208201905092915050565b60005b838110156107df5780820151818401526020810190506107c4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610807826107a5565b61081181856107b0565b93506108218185602086016107c1565b61082a816107eb565b840191505092915050565b6000602082019050818103600083015261084f81846107fc565b90509291505056fea26469706673582212204be8accecb5acfe12a13ecbb2d40d169367f343e506578ab147aede69f0dcab164736f6c63430008130033";

type ErrorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ErrorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Error__factory extends ContractFactory {
  constructor(...args: ErrorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Error & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Error__factory {
    return super.connect(runner) as Error__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorInterface {
    return new Interface(_abi) as ErrorInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Error {
    return new Contract(address, _abi, runner) as unknown as Error;
  }
}
