/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { RsaRegistry, RsaRegistryInterface } from "../../contracts/RsaRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAttestationVerifier",
        name: "_attestationVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "rsa_pub_hash",
        type: "bytes32",
      },
    ],
    name: "UpdateRSA",
    type: "event",
  },
  {
    inputs: [],
    name: "attestationVerifier",
    outputs: [
      {
        internalType: "contract IAttestationVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rsa_pub_key",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rsa_pub_key_hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "rsa_pub",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "attestation_data",
        type: "bytes",
      },
    ],
    name: "updatePubkey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516106aa3803806106aa83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516106196100916000396000818160be015261012b01526106196000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806360fca1091461005157806382c023811461008457806391b197d514610099578063b4b3c5a0146100b9575b600080fd5b61007161005f3660046102e4565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b61009761009236600461035d565b6100f8565b005b6100ac6100a73660046102e4565b61024a565b60405161007b919061040f565b6100e07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b6000848460405161010a929190610422565b60405190819003812063473b057f60e11b8252915033906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e760afe906101629087908790600401610432565b6020604051808303816000875af1158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a59190610461565b60405180604001604052806002815260200161323560f01b815250906101e75760405162461bcd60e51b81526004016101de919061040f565b60405180910390fd5b506001600160a01b038116600090815260208190526040902061020b868883610522565b5060405182906001600160a01b038316907f0e03f56c1ea7a4914ce6ed1abd967ed9b71d956d73e328fe2817d7c96eadca9e90600090a3505050505050565b6000602081905290815260409020805461026390610499565b80601f016020809104026020016040519081016040528092919081815260200182805461028f90610499565b80156102dc5780601f106102b1576101008083540402835291602001916102dc565b820191906000526020600020905b8154815290600101906020018083116102bf57829003601f168201915b505050505081565b6000602082840312156102f657600080fd5b81356001600160a01b038116811461030d57600080fd5b9392505050565b60008083601f84011261032657600080fd5b50813567ffffffffffffffff81111561033e57600080fd5b60208301915083602082850101111561035657600080fd5b9250929050565b6000806000806040858703121561037357600080fd5b843567ffffffffffffffff8082111561038b57600080fd5b61039788838901610314565b909650945060208701359150808211156103b057600080fd5b506103bd87828801610314565b95989497509550505050565b6000815180845260005b818110156103ef576020818501810151868301820152016103d3565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061030d60208301846103c9565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60006020828403121561047357600080fd5b8151801515811461030d57600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c908216806104ad57607f821691505b6020821081036104cd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561051d57600081815260208120601f850160051c810160208610156104fa5750805b601f850160051c820191505b8181101561051957828155600101610506565b5050505b505050565b67ffffffffffffffff83111561053a5761053a610483565b61054e836105488354610499565b836104d3565b6000601f841160018114610582576000851561056a5750838201355b600019600387901b1c1916600186901b1783556105dc565b600083815260209020601f19861690835b828110156105b35786850135825560209485019460019092019101610593565b50868210156105d05760001960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea264697066735822122089d08da748a31a4a17fd6ba735515fddaa901f9bcbbc43afd32c49bc0671e84064736f6c63430008130033";

type RsaRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: RsaRegistryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RsaRegistry__factory extends ContractFactory {
  constructor(...args: RsaRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _attestationVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_attestationVerifier, overrides || {});
  }
  override deploy(_attestationVerifier: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(_attestationVerifier, overrides || {}) as Promise<
      RsaRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RsaRegistry__factory {
    return super.connect(runner) as RsaRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RsaRegistryInterface {
    return new Interface(_abi) as RsaRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RsaRegistry {
    return new Contract(address, _abi, runner) as unknown as RsaRegistry;
  }
}
