/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { TransferVerifier, TransferVerifierInterface } from "../../../../contracts/verifiers/transfer_verifier.sol/TransferVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "input",
        type: "uint256[5]",
      },
      {
        internalType: "uint256[8]",
        name: "p",
        type: "uint256[8]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061116e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806368444dc714610030575b600080fd5b6100d660048036036101a081101561004757600080fd5b810190808060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f82011690508083019250505050505091929192908061010001906008806020026040519081016040528092919082600860200280828437600081840152601f19601f82011690508083019250505050505091929192905050506100ee565b60405180821515815260200191505060405180910390f35b600080600090505b60088160ff16101561019a577f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47838260ff166008811061013257fe5b60200201511061018d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111176022913960400191505060405180910390fd5b80806001019150506100f6565b506101a3610f47565b6040518060400160405280846000600881106101bb57fe5b60200201518152602001846001600881106101d257fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808660036008811061020557fe5b602002015181526020018660026008811061021c57fe5b6020020151815250815260200160405180604001604052808660056008811061024157fe5b602002015181526020018660046008811061025857fe5b6020020151815250815250816020018190525060405180604001604052808460066008811061028357fe5b602002015181526020018460076008811061029a57fe5b602002015181525081604001819052506102b2610f7a565b6102ba610438565b90506102c4610fc7565b604051806040016040528060008152602001600081525090506102fc8183608001516000600681106102f257fe5b6020020151610982565b905060005b60058110156103f8577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000187826005811061033757fe5b6020020151106103af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640081525060200191505060405180910390fd5b6103e9826103e4856080015160018501600681106103c957fe5b60200201518a85600581106103da57fe5b6020020151610a9c565b610982565b91508080600101915050610301565b5061042d6104098460000151610b97565b84602001518460000151856020015185876040015189604001518960600151610c4a565b935050505092915050565b610440610f7a565b60405180604001604052807f1783c05cfd27b8e7f4465070d9db3c6bf5743fe8110a56e7f4c7004eba9a00fc81526020017f0a157f5376a6025a410a6238d3a43c61fc78a1a80994b67fa0caecf61cb1d69e8152508160000181905250604051806040016040528060405180604001604052807f1387f8d1ead568859c78cb8d93818422f39f9a9cd8fc6864c9e8e97399dd737181526020017f2a1add31b3f516c479de85ffa3247809f6844d944afa1b20a39c1202f318e4ae815250815260200160405180604001604052807f14bd6f10abe80f51276019938f772a5f85c41b27060ebfeea9be179680e9f65781526020017f076499d477aa5a7ed340e7669dacd0e05dcd7621a6e811c7ad4ea8db0c7572448152508152508160200181905250604051806040016040528060405180604001604052807f0244147fb7127d0651d441301f213b966e4d78174b7be7def2c73831ac1481c881526020017f2756f48b7479c7838bc678a29c8dc8b51a88213fa4c2e66793d8f366912c85b5815250815260200160405180604001604052807f1ab9856ba2e542932833dada4ddc24329530de122e081cb3ff7e43faf757dab981526020017f088dee75ca26b36c7f8053dd6a083400b6885ddb73915848ca888f004e1ec3e88152508152508160400181905250604051806040016040528060405180604001604052807f05a93687d416925bf2b45a25c102b00b8d7f2b9820f922fd1c48c733fa6145c081526020017f22885b98fa8e1edad27666b3f3cadbd89612dfbbc521c4a777fa447ed0e70054815250815260200160405180604001604052807f2a4242ca191ba88636025d067cd4cc05f24c99db3804ebca5597235d551d4b5a81526020017f13b2441a12b641d77bcf0549b83eb73cf82ac3fe1be62a5b708af3a3a9d13ecb815250815250816060018190525060405180604001604052807f1d9d2e03f3e4beb009c9a1f1d0c3dcafcfb2f10968bb02d369ab64482f85ee5981526020017f190c9ea0e93cce223ce84d00defe06b769d35f2e575e94b5ae8ae535ddaaf12f815250816080015160006006811061075257fe5b602002018190525060405180604001604052807f2550938901cba1ba1d514d28b20d393b846cc49f58952f70a7cf3a4e0bf5fbdc81526020017f136ec7caa3cb182562bf3a8faeb08dd5bdca4885637575a3d20e8409aa94f13a81525081608001516001600681106107c057fe5b602002018190525060405180604001604052807f1ac7964c82c80319d647fe9a948a8efd0f3054b07b9c85c4113e55430fc80e9281526020017ee2338be33f7c6fe52034f662e1477827355a8d1a5216556c3c7818be9fa6f5815250816080015160026006811061082d57fe5b602002018190525060405180604001604052807f17319e998303439713b8e089b0a16252026c300097ecae8bd6234c1be864a10c81526020017f1aff63eabbf040f3c35511d586cb86467dd2ffd64ea3bfb2f6174ecdbf9d073e815250816080015160036006811061089b57fe5b602002018190525060405180604001604052807f1ff8e62e7b7f750ee819a2874dbad80733d9ff54b4213ee471296ea0da9c151e81526020017f1b37d0b5ad96930cd3f2e2727a6543a21017456a075ea66ea17418d1ff69ff4a815250816080015160046006811061090957fe5b602002018190525060405180604001604052807f2ce5342771e970118a8f7b2ab4a78fa9ee30166812f8642777b7a7d529772e6f81526020017f0a5583f717f390833b75b1ac9c72348a37a573d8434c830a53df329100d9db4e815250816080015160056006811061097757fe5b602002018190525090565b61098a610fc7565b610992610fe1565b8360000151816000600481106109a457fe5b6020020181815250508360200151816001600481106109bf57fe5b6020020181815250508260000151816002600481106109da57fe5b6020020181815250508260200151816003600481106109f557fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114610a1e57610a20565bfe5b5080610a94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6164642d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610aa4610fc7565b610aac611003565b836000015181600060038110610abe57fe5b602002018181525050836020015181600160038110610ad957fe5b6020020181815250508281600260038110610af057fe5b602002018181525050600060608360808460076107d05a03fa90508060008114610b1957610b1b565bfe5b5080610b8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6d756c2d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610b9f610fc7565b60008260000151148015610bb7575060008260200151145b15610bda5760405180604001604052806000815260200160008152509050610c45565b6040518060400160405280836000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47846020015181610c1c57fe5b067f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd470381525090505b919050565b6000610c54611025565b60405180608001604052808b8152602001898152602001878152602001858152509050610c7f611052565b60405180608001604052808b815260200189815260200187815260200185815250905060006018905060608167ffffffffffffffff81118015610cc157600080fd5b50604051908082528060200260200182016040528015610cf05781602001602082028036833780820191505090505b50905060005b6004811015610e79576000600682029050858260048110610d1357fe5b602002015160000151836000830181518110610d2b57fe5b602002602001018181525050858260048110610d4357fe5b602002015160200151836001830181518110610d5b57fe5b602002602001018181525050848260048110610d7357fe5b602002015160000151600060028110610d8857fe5b6020020151836002830181518110610d9c57fe5b602002602001018181525050848260048110610db457fe5b602002015160000151600160028110610dc957fe5b6020020151836003830181518110610ddd57fe5b602002602001018181525050848260048110610df557fe5b602002015160200151600060028110610e0a57fe5b6020020151836004830181518110610e1e57fe5b602002602001018181525050848260048110610e3657fe5b602002015160200151600160028110610e4b57fe5b6020020151836005830181518110610e5f57fe5b602002602001018181525050508080600101915050610cf6565b50610e8261107f565b6000602082602086026020860160086107d05a03fa90508060008114610ea757610ea9565bfe5b5080610f1d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f70616972696e672d6f70636f64652d6661696c6564000000000000000000000081525060200191505060405180910390fd5b600082600060018110610f2c57fe5b60200201511415965050505050505098975050505050505050565b6040518060600160405280610f5a610fc7565b8152602001610f676110a1565b8152602001610f74610fc7565b81525090565b6040518060a00160405280610f8d610fc7565b8152602001610f9a6110a1565b8152602001610fa76110a1565b8152602001610fb46110a1565b8152602001610fc16110c7565b81525090565b604051806040016040528060008152602001600081525090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060600160405280600390602082028036833780820191505090505090565b60405180608001604052806004905b61103c610fc7565b8152602001906001900390816110345790505090565b60405180608001604052806004905b6110696110a1565b8152602001906001900390816110615790505090565b6040518060200160405280600190602082028036833780820191505090505090565b60405180604001604052806110b46110f4565b81526020016110c16110f4565b81525090565b6040518060c001604052806006905b6110de610fc7565b8152602001906001900390816110d65790505090565b604051806040016040528060029060208202803683378082019150509050509056fe76657269666965722d70726f6f662d656c656d656e742d6774652d7072696d652d71a2646970667358221220aecc425d719ae560dead7fc781a2ba00d001ff358199a6e7463ef308e8f6f43864736f6c634300060c0033";

type TransferVerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: TransferVerifierConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferVerifier__factory extends ContractFactory {
  constructor(...args: TransferVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TransferVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TransferVerifier__factory {
    return super.connect(runner) as TransferVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferVerifierInterface {
    return new Interface(_abi) as TransferVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TransferVerifier {
    return new Contract(address, _abi, runner) as unknown as TransferVerifier;
  }
}
