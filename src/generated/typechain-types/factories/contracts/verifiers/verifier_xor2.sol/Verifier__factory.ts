/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../../contracts/verifiers/verifier_xor2.sol/Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[1]",
        name: "input",
        type: "uint256[1]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506112ce806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806343753b4d14610030575b600080fd5b61018f600480360361012081101561004757600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156100fc578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050815260200190600101906100a8565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080602001906001806020026040519081016040528092919082600160200280828437600081840152601f19601f82011690508083019250505050505091929192905050506101a7565b60405180821515815260200191505060405180910390f35b60006101b1611156565b6040518060400160405280876000600281106101c957fe5b60200201518152602001876001600281106101e057fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061021357fe5b602002015160006002811061022457fe5b602002015181526020018860006002811061023b57fe5b602002015160016002811061024c57fe5b6020020151815250815260200160405180604001604052808860016002811061027157fe5b602002015160006002811061028257fe5b602002015181526020018860016002811061029957fe5b60200201516001600281106102aa57fe5b602002015181525081525081602001819052506040518060400160405280856000600281106102d557fe5b60200201518152602001856001600281106102ec57fe5b602002015181525081604001819052506060600167ffffffffffffffff8111801561031657600080fd5b506040519080825280602002602001820160405280156103455781602001602082028036833780820191505090505b50905060005b600181101561038a5784816001811061036057fe5b602002015182828151811061037157fe5b602002602001018181525050808060010191505061034b565b50600061039782846103b7565b14156103a8576001925050506103af565b6000925050505b949350505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506103e5611189565b6103ed6105e8565b905080608001515160018651011461046d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f76657269666965722d6261642d696e707574000000000000000000000000000081525060200191505060405180910390fd5b6104756111d0565b6040518060400160405280600081526020016000815250905060005b865181101561057157838782815181106104a757fe5b602002602001015110610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c640081525060200191505060405180910390fd5b6105628261055d8560800151600185018151811061053c57fe5b60200260200101518a858151811061055057fe5b60200260200101516109dc565b610ad7565b91508080600101915050610491565b5061059481836080015160008151811061058757fe5b6020026020010151610ad7565b90506105ca6105a68660000151610bf1565b8660200151846000015185602001518587604001518b604001518960600151610c8b565b6105da57600193505050506105e2565b600093505050505b92915050565b6105f0611189565b60405180604001604052807f1d1f431cb75750d33f4fb997e0101f570bad12eb8e85cc66762b6b086029e75a81526020017f1c000d12c6d7a981d9e52c6febf5851cae6a4ac5289f02f074b1467d089b12768152508160000181905250604051806040016040528060405180604001604052807f2b207fa47bd0eb2e3f6eb17e2dbf4b0ad67606dab6991887951d0e6a7bca64a881526020017f1e3e8977564415223342d0b7b067c1cde95339dff307fb6062466742781444eb815250815260200160405180604001604052807f165f418f08e4ef356acb142125e3231e7b48e6c22146a81c33e7bc378776835c81526020017f257e0007da7c8ab8aeb07df40204d3c0e42cab8c803246f25557e4bcd98d56968152508152508160200181905250604051806040016040528060405180604001604052807f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281526020017f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed815250815260200160405180604001604052807f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81526020017f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8152508152508160400181905250604051806040016040528060405180604001604052807f1e9123af8593cbf1bbff74db53b666ddcd995929fabaf73e0fd315d3f55a4c0281526020017f034b2f96673f16cb6c54ec63c489cf2846e8707796c0891e682115c830c70ecb815250815260200160405180604001604052807f2b91318fd447f55936baf18959543fae8eb3253481c394d856c49cd264ac595881526020017f271599a1392e7c761160c7789106ce106805155f7ec96c038290698f1cb715c48152508152508160600181905250600267ffffffffffffffff811180156108b457600080fd5b506040519080825280602002602001820160405280156108ee57816020015b6108db6111d0565b8152602001906001900390816108d35790505b50816080018190525060405180604001604052807f2579c7ca03efa6349c43aa56ca186cad7534a8705db9c18ec92202d88165c04c81526020017f04e824d0f40ed270f70382167d9443ac2d283525b919093ad5298b235b4c9e87815250816080015160008151811061095d57fe5b602002602001018190525060405180604001604052807f121fcc3a345efee73e1312a99da07771f5d8f6ad9a4d7a977dfb54ef39a9ea4381526020017f1a570abd56b5721f9bf904424cfcd65e4dc003685ca6cb5746dcc7b0f687935d81525081608001516001815181106109ce57fe5b602002602001018190525090565b6109e46111d0565b6109ec6111ea565b8360000151816000600381106109fe57fe5b602002018181525050836020015181600160038110610a1957fe5b6020020181815250508281600260038110610a3057fe5b602002018181525050600060608360808460076107d05a03fa90508060008114610a5957610a5b565bfe5b5080610acf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6d756c2d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610adf6111d0565b610ae761120c565b836000015181600060048110610af957fe5b602002018181525050836020015181600160048110610b1457fe5b602002018181525050826000015181600260048110610b2f57fe5b602002018181525050826020015181600360048110610b4a57fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114610b7357610b75565bfe5b5080610be9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f70616972696e672d6164642d6661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b610bf96111d0565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015610c36575060008360200151145b15610c5a576040518060400160405280600081526020016000815250915050610c86565b60405180604001604052808460000151815260200182856020015181610c7c57fe5b0683038152509150505b919050565b60006060600467ffffffffffffffff81118015610ca757600080fd5b50604051908082528060200260200182016040528015610ce157816020015b610cce6111d0565b815260200190600190039081610cc65790505b5090506060600467ffffffffffffffff81118015610cfe57600080fd5b50604051908082528060200260200182016040528015610d3857816020015b610d2561122e565b815260200190600190039081610d1d5790505b5090508a82600081518110610d4957fe5b60200260200101819052508882600181518110610d6257fe5b60200260200101819052508682600281518110610d7b57fe5b60200260200101819052508482600381518110610d9457fe5b60200260200101819052508981600081518110610dad57fe5b60200260200101819052508781600181518110610dc657fe5b60200260200101819052508581600281518110610ddf57fe5b60200260200101819052508381600381518110610df857fe5b6020026020010181905250610e0d8282610e1d565b9250505098975050505050505050565b60008151835114610e96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f70616972696e672d6c656e677468732d6661696c65640000000000000000000081525060200191505060405180910390fd5b600083519050600060068202905060608167ffffffffffffffff81118015610ebd57600080fd5b50604051908082528060200260200182016040528015610eec5781602001602082028036833780820191505090505b50905060005b8381101561108f57868181518110610f0657fe5b602002602001015160000151826000600684020181518110610f2457fe5b602002602001018181525050868181518110610f3c57fe5b602002602001015160200151826001600684020181518110610f5a57fe5b602002602001018181525050858181518110610f7257fe5b602002602001015160000151600060028110610f8a57fe5b6020020151826002600684020181518110610fa157fe5b602002602001018181525050858181518110610fb957fe5b602002602001015160000151600160028110610fd157fe5b6020020151826003600684020181518110610fe857fe5b60200260200101818152505085818151811061100057fe5b60200260200101516020015160006002811061101857fe5b602002015182600460068402018151811061102f57fe5b60200260200101818152505085818151811061104757fe5b60200260200101516020015160016002811061105f57fe5b602002015182600560068402018151811061107657fe5b6020026020010181815250508080600101915050610ef2565b50611098611254565b6000602082602086026020860160086107d05a03fa905080600081146110bd576110bf565bfe5b5080611133576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f70616972696e672d6f70636f64652d6661696c6564000000000000000000000081525060200191505060405180910390fd5b60008260006001811061114257fe5b602002015114159550505050505092915050565b60405180606001604052806111696111d0565b815260200161117661122e565b81526020016111836111d0565b81525090565b6040518060a0016040528061119c6111d0565b81526020016111a961122e565b81526020016111b661122e565b81526020016111c361122e565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060400160405280611241611276565b815260200161124e611276565b81525090565b6040518060200160405280600190602082028036833780820191505090505090565b604051806040016040528060029060208202803683378082019150509050509056fea2646970667358221220cf40ffe78eee2b3739fbe291be1d1b222435ef5b0b4d85f9c90b044301a36a0b64736f6c634300060c0033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Verifier__factory {
    return super.connect(runner) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new Interface(_abi) as VerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Verifier {
    return new Contract(address, _abi, runner) as unknown as Verifier;
  }
}
