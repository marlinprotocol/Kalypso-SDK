/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { PrivateInputRegistry, PrivateInputRegistryInterface } from "../../contracts/PrivateInputRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ProofMarketPlace",
        name: "_proofMarketPlace",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "askId",
        type: "uint256",
      },
    ],
    name: "AddPrivateInputs",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "askId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "privInputs",
        type: "bytes",
      },
    ],
    name: "addPrivateInputs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "privateInputs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proofMarketPlace",
    outputs: [
      {
        internalType: "contract ProofMarketPlace",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405162000e5438038062000e54833981810160405281019061003491906100e3565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610110565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009e82610073565b9050919050565b60006100b082610093565b9050919050565b6100c0816100a5565b81146100cb57600080fd5b50565b6000815190506100dd816100b7565b92915050565b6000602082840312156100f9576100f861006e565b5b6000610107848285016100ce565b91505092915050565b608051610d21620001336000396000818161014e01526102ef0152610d216000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631b90a9ee14610046578063732a9d6314610062578063a062fc9f14610080575b600080fd5b610060600480360381019061005b9190610460565b6100b0565b005b61006a6102ed565b604051610077919061053f565b60405180910390f35b61009a6004803603810190610095919061055a565b610311565b6040516100a79190610617565b60405180910390f35b600080600085815260200190815260200160002080546100cf90610668565b9050146040518060400160405280600181526020017f330000000000000000000000000000000000000000000000000000000000000081525090610149576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014091906106ee565b60405180910390fd5b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636c8df518856040518263ffffffff1660e01b81526004016101a5919061071f565b600060405180830381865afa1580156101c2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101eb91906109e3565b9150506001600581111561020257610201610a3f565b5b81600581111561021557610214610a3f565b5b146040518060400160405280600281526020017f31380000000000000000000000000000000000000000000000000000000000008152509061028d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028491906106ee565b60405180910390fd5b50828260008087815260200190815260200160002091826102af929190610c1b565b507f8749cfbe8eced53333c749f06f6606970c65fbd736844a8cd40c6a43574e1905846040516102df919061071f565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000602052806000526040600020600091509050805461033090610668565b80601f016020809104026020016040519081016040528092919081815260200182805461035c90610668565b80156103a95780601f1061037e576101008083540402835291602001916103a9565b820191906000526020600020905b81548152906001019060200180831161038c57829003601f168201915b505050505081565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6103d8816103c5565b81146103e357600080fd5b50565b6000813590506103f5816103cf565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104205761041f6103fb565b5b8235905067ffffffffffffffff81111561043d5761043c610400565b5b60208301915083600182028301111561045957610458610405565b5b9250929050565b600080600060408486031215610479576104786103bb565b5b6000610487868287016103e6565b935050602084013567ffffffffffffffff8111156104a8576104a76103c0565b5b6104b48682870161040a565b92509250509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105056105006104fb846104c0565b6104e0565b6104c0565b9050919050565b6000610517826104ea565b9050919050565b60006105298261050c565b9050919050565b6105398161051e565b82525050565b60006020820190506105546000830184610530565b92915050565b6000602082840312156105705761056f6103bb565b5b600061057e848285016103e6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105c15780820151818401526020810190506105a6565b60008484015250505050565b6000601f19601f8301169050919050565b60006105e982610587565b6105f38185610592565b93506106038185602086016105a3565b61060c816105cd565b840191505092915050565b6000602082019050818103600083015261063181846105de565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061068057607f821691505b60208210810361069357610692610639565b5b50919050565b600081519050919050565b600082825260208201905092915050565b60006106c082610699565b6106ca81856106a4565b93506106da8185602086016105a3565b6106e3816105cd565b840191505092915050565b6000602082019050818103600083015261070881846106b5565b905092915050565b610719816103c5565b82525050565b60006020820190506107346000830184610710565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610777826105cd565b810181811067ffffffffffffffff821117156107965761079561073f565b5b80604052505050565b60006107a96103b1565b90506107b5828261076e565b919050565b600080fd5b6000819050919050565b6107d2816107bf565b81146107dd57600080fd5b50565b6000815190506107ef816107c9565b92915050565b600081519050610804816103cf565b92915050565b6000610815826104c0565b9050919050565b6108258161080a565b811461083057600080fd5b50565b6000815190506108428161081c565b92915050565b600080fd5b600067ffffffffffffffff8211156108685761086761073f565b5b610871826105cd565b9050602081019050919050565b600061089161088c8461084d565b61079f565b9050828152602081018484840111156108ad576108ac610848565b5b6108b88482856105a3565b509392505050565b600082601f8301126108d5576108d46103fb565b5b81516108e584826020860161087e565b91505092915050565b600060e082840312156109045761090361073a565b5b61090e60e061079f565b9050600061091e848285016107e0565b6000830152506020610932848285016107f5565b6020830152506040610946848285016107f5565b604083015250606061095a848285016107f5565b606083015250608061096e848285016107f5565b60808301525060a061098284828501610833565b60a08301525060c082015167ffffffffffffffff8111156109a6576109a56107ba565b5b6109b2848285016108c0565b60c08301525092915050565b600681106109cb57600080fd5b50565b6000815190506109dd816109be565b92915050565b600080604083850312156109fa576109f96103bb565b5b600083015167ffffffffffffffff811115610a1857610a176103c0565b5b610a24858286016108ee565b9250506020610a35858286016109ce565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610adb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a9e565b610ae58683610a9e565b95508019841693508086168417925050509392505050565b6000610b18610b13610b0e846103c5565b6104e0565b6103c5565b9050919050565b6000819050919050565b610b3283610afd565b610b46610b3e82610b1f565b848454610aab565b825550505050565b600090565b610b5b610b4e565b610b66818484610b29565b505050565b5b81811015610b8a57610b7f600082610b53565b600181019050610b6c565b5050565b601f821115610bcf57610ba081610a79565b610ba984610a8e565b81016020851015610bb8578190505b610bcc610bc485610a8e565b830182610b6b565b50505b505050565b600082821c905092915050565b6000610bf260001984600802610bd4565b1980831691505092915050565b6000610c0b8383610be1565b9150826002028217905092915050565b610c258383610a6e565b67ffffffffffffffff811115610c3e57610c3d61073f565b5b610c488254610668565b610c53828285610b8e565b6000601f831160018114610c825760008415610c70578287013590505b610c7a8582610bff565b865550610ce2565b601f198416610c9086610a79565b60005b82811015610cb857848901358255600182019150602085019450602081019050610c93565b86831015610cd55784890135610cd1601f891682610be1565b8355505b6001600288020188555050505b5050505050505056fea26469706673582212208d1dd669e853bdf554db5ff2316929ca1c0c614b29ce76abd6e527b5d6cc4c4e64736f6c63430008130033";

type PrivateInputRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: PrivateInputRegistryConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateInputRegistry__factory extends ContractFactory {
  constructor(...args: PrivateInputRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _proofMarketPlace: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_proofMarketPlace, overrides || {});
  }
  override deploy(_proofMarketPlace: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(_proofMarketPlace, overrides || {}) as Promise<
      PrivateInputRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateInputRegistry__factory {
    return super.connect(runner) as PrivateInputRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateInputRegistryInterface {
    return new Interface(_abi) as PrivateInputRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrivateInputRegistry {
    return new Contract(address, _abi, runner) as unknown as PrivateInputRegistry;
  }
}
