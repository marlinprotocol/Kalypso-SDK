/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Xor2_verifier_wrapper,
  Xor2_verifier_wrapperInterface,
} from "../../../../contracts/verifierWrappers/xor2_verifier_wrapper.sol/Xor2_verifier_wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract i_xor2_verifier",
        name: "_iverifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[1]",
        name: "inputs",
        type: "uint256[1]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "encodeInputAndProofForVerification",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[1]",
        name: "inputs",
        type: "uint256[1]",
      },
    ],
    name: "encodeInputs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "encodeProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "iverifier",
    outputs: [
      {
        internalType: "contract i_xor2_verifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputs",
        type: "bytes",
      },
    ],
    name: "verifyInputs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001346380380620013468339818101604052810190620000379190620000f0565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000122565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b6000620000b88262000097565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b60006020828403121562000109576200010862000072565b5b60006200011984828501620000d9565b91505092915050565b6080516112016200014560003960008181610224015261031701526112016000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c80626b4fb0146100665780638e760afe146100965780639bbcad78146100c6578063a6dfbc7f146100f6578063e7f5b81d14610126578063ec23a9ed14610144575b600080fd5b610080600480360381019061007b91906106cc565b610174565b60405161008d91906107b3565b60405180910390f35b6100b060048036038101906100ab9190610830565b6101b4565b6040516100bd9190610898565b60405180910390f35b6100e060048036038101906100db91906108b3565b6102d0565b6040516100ed91906107b3565b60405180910390f35b610110600480360381019061010b9190610830565b6102f9565b60405161011d9190610898565b60405180910390f35b61012e610315565b60405161013b919061095f565b60405180910390f35b61015e6004803603810190610159919061097a565b610339565b60405161016b91906107b3565b60405180910390f35b606061017f856102d0565b61018a858585610339565b60405160200161019b9291906109ce565b6040516020818303038152906040529050949350505050565b60006101be610368565b6101c661038a565b6101ce610368565b6101d66103b7565b60008088888101906101e89190610aba565b91509150818060200190518101906102009190610bd2565b9250808060200190518101906102169190610d15565b8096508197508298505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166343753b4d878787876040518563ffffffff1660e01b81526004016102819493929190610f96565b602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c29190611009565b965050505050505092915050565b6060816040516020016102e39190611036565b6040516020818303038152906040529050919050565b6000828281019061030a919061114a565b506001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606083838360405160200161035093929190611193565b60405160208183030381529060405290509392505050565b6040518060400160405280600290602082028036833780820191505090505090565b60405180604001604052806002905b6103a1610368565b8152602001906001900390816103995790505090565b6040518060200160405280600190602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61043b826103f2565b810181811067ffffffffffffffff8211171561045a57610459610403565b5b80604052505050565b600061046d6103d9565b90506104798282610432565b919050565b600067ffffffffffffffff82111561049957610498610403565b5b602082029050919050565b600080fd5b6000819050919050565b6104bc816104a9565b81146104c757600080fd5b50565b6000813590506104d9816104b3565b92915050565b60006104f26104ed8461047e565b610463565b9050806020840283018581111561050c5761050b6104a4565b5b835b81811015610535578061052188826104ca565b84526020840193505060208101905061050e565b5050509392505050565b600082601f830112610554576105536103ed565b5b60016105618482856104df565b91505092915050565b600067ffffffffffffffff82111561058557610584610403565b5b602082029050919050565b60006105a361059e8461056a565b610463565b905080602084028301858111156105bd576105bc6104a4565b5b835b818110156105e657806105d288826104ca565b8452602084019350506020810190506105bf565b5050509392505050565b600082601f830112610605576106046103ed565b5b6002610612848285610590565b91505092915050565b600067ffffffffffffffff82111561063657610635610403565b5b602082029050919050565b600061065461064f8461061b565b610463565b9050806040840283018581111561066e5761066d6104a4565b5b835b81811015610697578061068388826105f0565b845260208401935050604081019050610670565b5050509392505050565b600082601f8301126106b6576106b56103ed565b5b60026106c3848285610641565b91505092915050565b60008060008061012085870312156106e7576106e66103e3565b5b60006106f58782880161053f565b9450506020610706878288016105f0565b9350506060610717878288016106a1565b92505060e0610728878288016105f0565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b8381101561076e578082015181840152602081019050610753565b60008484015250505050565b600061078582610734565b61078f818561073f565b935061079f818560208601610750565b6107a8816103f2565b840191505092915050565b600060208201905081810360008301526107cd818461077a565b905092915050565b600080fd5b60008083601f8401126107f0576107ef6103ed565b5b8235905067ffffffffffffffff81111561080d5761080c6107d5565b5b602083019150836001820283011115610829576108286104a4565b5b9250929050565b60008060208385031215610847576108466103e3565b5b600083013567ffffffffffffffff811115610865576108646103e8565b5b610871858286016107da565b92509250509250929050565b60008115159050919050565b6108928161087d565b82525050565b60006020820190506108ad6000830184610889565b92915050565b6000602082840312156108c9576108c86103e3565b5b60006108d78482850161053f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061092561092061091b846108e0565b610900565b6108e0565b9050919050565b60006109378261090a565b9050919050565b60006109498261092c565b9050919050565b6109598161093e565b82525050565b60006020820190506109746000830184610950565b92915050565b60008060006101008486031215610994576109936103e3565b5b60006109a2868287016105f0565b93505060406109b3868287016106a1565b92505060c06109c4868287016105f0565b9150509250925092565b600060408201905081810360008301526109e8818561077a565b905081810360208301526109fc818461077a565b90509392505050565b600080fd5b600067ffffffffffffffff821115610a2557610a24610403565b5b610a2e826103f2565b9050602081019050919050565b82818337600083830152505050565b6000610a5d610a5884610a0a565b610463565b905082815260208101848484011115610a7957610a78610a05565b5b610a84848285610a3b565b509392505050565b600082601f830112610aa157610aa06103ed565b5b8135610ab1848260208601610a4a565b91505092915050565b60008060408385031215610ad157610ad06103e3565b5b600083013567ffffffffffffffff811115610aef57610aee6103e8565b5b610afb85828601610a8c565b925050602083013567ffffffffffffffff811115610b1c57610b1b6103e8565b5b610b2885828601610a8c565b9150509250929050565b600081519050610b41816104b3565b92915050565b6000610b5a610b558461047e565b610463565b90508060208402830185811115610b7457610b736104a4565b5b835b81811015610b9d5780610b898882610b32565b845260208401935050602081019050610b76565b5050509392505050565b600082601f830112610bbc57610bbb6103ed565b5b6001610bc9848285610b47565b91505092915050565b600060208284031215610be857610be76103e3565b5b6000610bf684828501610ba7565b91505092915050565b6000610c12610c0d8461056a565b610463565b90508060208402830185811115610c2c57610c2b6104a4565b5b835b81811015610c555780610c418882610b32565b845260208401935050602081019050610c2e565b5050509392505050565b600082601f830112610c7457610c736103ed565b5b6002610c81848285610bff565b91505092915050565b6000610c9d610c988461061b565b610463565b90508060408402830185811115610cb757610cb66104a4565b5b835b81811015610ce05780610ccc8882610c5f565b845260208401935050604081019050610cb9565b5050509392505050565b600082601f830112610cff57610cfe6103ed565b5b6002610d0c848285610c8a565b91505092915050565b60008060006101008486031215610d2f57610d2e6103e3565b5b6000610d3d86828701610c5f565b9350506040610d4e86828701610cea565b92505060c0610d5f86828701610c5f565b9150509250925092565b600060029050919050565b600081905092915050565b6000819050919050565b610d92816104a9565b82525050565b6000610da48383610d89565b60208301905092915050565b6000602082019050919050565b610dc681610d69565b610dd08184610d74565b9250610ddb82610d7f565b8060005b83811015610e0c578151610df38782610d98565b9650610dfe83610db0565b925050600181019050610ddf565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b600081905092915050565b610e4881610d69565b610e528184610e34565b9250610e5d82610d7f565b8060005b83811015610e8e578151610e758782610d98565b9650610e8083610db0565b925050600181019050610e61565b505050505050565b6000610ea28383610e3f565b60408301905092915050565b6000602082019050919050565b610ec481610e14565b610ece8184610e1f565b9250610ed982610e2a565b8060005b83811015610f0a578151610ef18782610e96565b9650610efc83610eae565b925050600181019050610edd565b505050505050565b600060019050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b610f4881610f12565b610f528184610f1d565b9250610f5d82610f28565b8060005b83811015610f8e578151610f758782610d98565b9650610f8083610f32565b925050600181019050610f61565b505050505050565b600061012082019050610fac6000830187610dbd565b610fb96040830186610ebb565b610fc660c0830185610dbd565b610fd4610100830184610f3f565b95945050505050565b610fe68161087d565b8114610ff157600080fd5b50565b60008151905061100381610fdd565b92915050565b60006020828403121561101f5761101e6103e3565b5b600061102d84828501610ff4565b91505092915050565b600060208201905061104b6000830184610f3f565b92915050565b600067ffffffffffffffff82111561106c5761106b610403565b5b602082029050602081019050919050565b6000819050919050565b6110908161107d565b811461109b57600080fd5b50565b6000813590506110ad81611087565b92915050565b60006110c66110c184611051565b610463565b905080838252602082019050602084028301858111156110e9576110e86104a4565b5b835b8181101561111257806110fe888261109e565b8452602084019350506020810190506110eb565b5050509392505050565b600082601f830112611131576111306103ed565b5b81356111418482602086016110b3565b91505092915050565b6000602082840312156111605761115f6103e3565b5b600082013567ffffffffffffffff81111561117e5761117d6103e8565b5b61118a8482850161111c565b91505092915050565b6000610100820190506111a96000830186610dbd565b6111b66040830185610ebb565b6111c360c0830184610dbd565b94935050505056fea26469706673582212209092c8acf5f9452bf4f158b016f9d3fa140c353b6be324613bfb2af2d06492e564736f6c63430008130033";

type Xor2_verifier_wrapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: Xor2_verifier_wrapperConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Xor2_verifier_wrapper__factory extends ContractFactory {
  constructor(...args: Xor2_verifier_wrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _iverifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_iverifier, overrides || {});
  }
  override deploy(_iverifier: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(_iverifier, overrides || {}) as Promise<
      Xor2_verifier_wrapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Xor2_verifier_wrapper__factory {
    return super.connect(runner) as Xor2_verifier_wrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Xor2_verifier_wrapperInterface {
    return new Interface(_abi) as Xor2_verifier_wrapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Xor2_verifier_wrapper {
    return new Contract(address, _abi, runner) as unknown as Xor2_verifier_wrapper;
  }
}
